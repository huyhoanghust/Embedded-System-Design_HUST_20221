ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.section	.rodata.str1.4,"aMS",%progbits,1
  15              		.align	2
  16              	.LC0:
  17 0000 5461736B 		.ascii	"Task1\000"
  17      3100
  18 0006 0000     		.align	2
  19              	.LC2:
  20 0008 5461736B 		.ascii	"Task2\000"
  20      3200
  21 000e 0000     		.align	2
  22              	.LC4:
  23 0010 5461736B 		.ascii	"Task3\000"
  23      3300
  24 0016 0000     		.align	2
  25              	.LC6:
  26 0018 5461736B 		.ascii	"Task4\000"
  26      3400
  27              		.text
  28              	.Ltext0:
  29              		.cfi_sections	.debug_frame
  30              		.section	.text.MX_GPIO_Init,"ax",%progbits
  31              		.align	1
  32              		.syntax unified
  33              		.thumb
  34              		.thumb_func
  36              	MX_GPIO_Init:
  37              	.LFB81:
  38              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 2


  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "string.h"
  26:Core/Src/main.c **** #include "stdio.h"
  27:Core/Src/main.c **** #include "stdlib.h"
  28:Core/Src/main.c **** #include "math.h"
  29:Core/Src/main.c **** #include "st7735.h"
  30:Core/Src/main.c **** #include "dht22.h"
  31:Core/Src/main.c **** /* USER CODE END Includes */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c ****  SPI_HandleTypeDef hspi2;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  51:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** UART_HandleTypeDef huart3;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** osThreadId Task1Handle;
  56:Core/Src/main.c **** osThreadId Task2Handle;
  57:Core/Src/main.c **** osThreadId Task3Handle;
  58:Core/Src/main.c **** osThreadId Task4Handle;
  59:Core/Src/main.c **** osSemaphoreId SensorSemHandle;
  60:Core/Src/main.c **** osSemaphoreId ServoSemHandle;
  61:Core/Src/main.c **** osSemaphoreId DataSemHandle;
  62:Core/Src/main.c **** osSemaphoreId IRQSemHandle;
  63:Core/Src/main.c **** /* USER CODE BEGIN PV */
  64:Core/Src/main.c **** enum
  65:Core/Src/main.c **** {
  66:Core/Src/main.c ****   Mode_auto,
  67:Core/Src/main.c ****   Mode_manual
  68:Core/Src/main.c **** };
  69:Core/Src/main.c **** volatile int Mode = Mode_auto;
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** uint8_t Rx_data;
  72:Core/Src/main.c **** char buffer_data[50] = {0};
  73:Core/Src/main.c **** volatile int Rx_index = 0;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 3


  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** //example
  76:Core/Src/main.c **** int temp = 30;
  77:Core/Src/main.c **** int humi = 90;
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** char buf_sensor[20] = {0};
  80:Core/Src/main.c **** char buf_temp[20] = {0};
  81:Core/Src/main.c **** char buf_humi[20] = {0};
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** int count = 25;
  84:Core/Src/main.c **** char rota[20] = {0};
  85:Core/Src/main.c **** char threshold[20] = {0};
  86:Core/Src/main.c **** char label_thres[10] = {0};
  87:Core/Src/main.c **** char str_thres[5] = {0};
  88:Core/Src/main.c **** int angle;
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** int PC_rota;
  91:Core/Src/main.c **** float PC_threshold;
  92:Core/Src/main.c **** /* USER CODE END PV */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  95:Core/Src/main.c **** void SystemClock_Config(void);
  96:Core/Src/main.c **** static void MX_GPIO_Init(void);
  97:Core/Src/main.c **** static void MX_USART3_UART_Init(void);
  98:Core/Src/main.c **** static void MX_SPI2_Init(void);
  99:Core/Src/main.c **** static void MX_TIM2_Init(void);
 100:Core/Src/main.c **** static void MX_TIM3_Init(void);
 101:Core/Src/main.c **** void Task_Sensor(void const * argument);
 102:Core/Src/main.c **** void Task_Servo(void const * argument);
 103:Core/Src/main.c **** void Task_Display(void const * argument);
 104:Core/Src/main.c **** void Task_Data(void const * argument);
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** /* USER CODE END PFP */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 111:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 112:Core/Src/main.c **** void log_data(char *buf)
 113:Core/Src/main.c **** {
 114:Core/Src/main.c ****   HAL_UART_Transmit(&huart3, (uint8_t *)buf, strlen(buf), 100);
 115:Core/Src/main.c **** }
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 118:Core/Src/main.c **** {
 119:Core/Src/main.c ****   if (huart == &huart3)
 120:Core/Src/main.c ****   {
 121:Core/Src/main.c ****     if (Rx_data == 13)
 122:Core/Src/main.c ****     {
 123:Core/Src/main.c ****       buffer_data[Rx_index] = '\0';
 124:Core/Src/main.c ****       Rx_index = 0;
 125:Core/Src/main.c ****       if (strcmp(buffer_data, "manual") == 0)
 126:Core/Src/main.c ****       {
 127:Core/Src/main.c ****         Mode = Mode_manual;
 128:Core/Src/main.c ****       }
 129:Core/Src/main.c ****       if (strcmp(buffer_data, "auto") == 0)
 130:Core/Src/main.c ****       {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 4


 131:Core/Src/main.c ****         Mode = Mode_auto;
 132:Core/Src/main.c ****       }
 133:Core/Src/main.c ****       osSemaphoreRelease(IRQSemHandle);
 134:Core/Src/main.c ****     }
 135:Core/Src/main.c ****     else
 136:Core/Src/main.c ****     {
 137:Core/Src/main.c ****       buffer_data[Rx_index] = (char)Rx_data;
 138:Core/Src/main.c ****       Rx_index++;
 139:Core/Src/main.c ****       // log_data((char*)Rx_data);
 140:Core/Src/main.c ****     }
 141:Core/Src/main.c ****     HAL_UART_Receive_IT(&huart3, &Rx_data, 1);
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c **** }
 144:Core/Src/main.c **** /* USER CODE END 0 */
 145:Core/Src/main.c **** 
 146:Core/Src/main.c **** /**
 147:Core/Src/main.c ****   * @brief  The application entry point.
 148:Core/Src/main.c ****   * @retval int
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c **** int main(void)
 151:Core/Src/main.c **** {
 152:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* USER CODE END 1 */
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 159:Core/Src/main.c ****   HAL_Init();
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* USER CODE END Init */
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /* Configure the system clock */
 166:Core/Src/main.c ****   SystemClock_Config();
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* USER CODE END SysInit */
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /* Initialize all configured peripherals */
 173:Core/Src/main.c ****   MX_GPIO_Init();
 174:Core/Src/main.c ****   MX_USART3_UART_Init();
 175:Core/Src/main.c ****   MX_SPI2_Init();
 176:Core/Src/main.c ****   MX_TIM2_Init();
 177:Core/Src/main.c ****   MX_TIM3_Init();
 178:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 179:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart3, &Rx_data, 1);
 180:Core/Src/main.c ****   /* USER CODE END 2 */
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 183:Core/Src/main.c ****   /* add mutexes, ... */
 184:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /* Create the semaphores(s) */
 187:Core/Src/main.c ****   /* definition and creation of SensorSem */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 5


 188:Core/Src/main.c ****   osSemaphoreDef(SensorSem);
 189:Core/Src/main.c ****   SensorSemHandle = osSemaphoreCreate(osSemaphore(SensorSem), 1);
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /* definition and creation of ServoSem */
 192:Core/Src/main.c ****   osSemaphoreDef(ServoSem);
 193:Core/Src/main.c ****   ServoSemHandle = osSemaphoreCreate(osSemaphore(ServoSem), 1);
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* definition and creation of DataSem */
 196:Core/Src/main.c ****   osSemaphoreDef(DataSem);
 197:Core/Src/main.c ****   DataSemHandle = osSemaphoreCreate(osSemaphore(DataSem), 1);
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* definition and creation of IRQSem */
 200:Core/Src/main.c ****   osSemaphoreDef(IRQSem);
 201:Core/Src/main.c ****   IRQSemHandle = osSemaphoreCreate(osSemaphore(IRQSem), 1);
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 204:Core/Src/main.c ****   /* add semaphores, ... */
 205:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 208:Core/Src/main.c ****   /* start timers, add new ones, ... */
 209:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 212:Core/Src/main.c ****   /* add queues, ... */
 213:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* Create the thread(s) */
 216:Core/Src/main.c ****   /* definition and creation of Task1 */
 217:Core/Src/main.c ****   osThreadDef(Task1, Task_Sensor, osPriorityHigh, 0, 128);
 218:Core/Src/main.c ****   Task1Handle = osThreadCreate(osThread(Task1), NULL);
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* definition and creation of Task2 */
 221:Core/Src/main.c ****   osThreadDef(Task2, Task_Servo, osPriorityAboveNormal, 0, 128);
 222:Core/Src/main.c ****   Task2Handle = osThreadCreate(osThread(Task2), NULL);
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /* definition and creation of Task3 */
 225:Core/Src/main.c ****   osThreadDef(Task3, Task_Display, osPriorityNormal, 0, 128);
 226:Core/Src/main.c ****   Task3Handle = osThreadCreate(osThread(Task3), NULL);
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /* definition and creation of Task4 */
 229:Core/Src/main.c ****   osThreadDef(Task4, Task_Data, osPriorityBelowNormal, 0, 128);
 230:Core/Src/main.c ****   Task4Handle = osThreadCreate(osThread(Task4), NULL);
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 233:Core/Src/main.c ****   /* add threads, ... */
 234:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /* Start scheduler */
 237:Core/Src/main.c ****   osKernelStart();
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 240:Core/Src/main.c ****   /* Infinite loop */
 241:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 242:Core/Src/main.c ****   while (1)
 243:Core/Src/main.c ****   {
 244:Core/Src/main.c ****     /* USER CODE END WHILE */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 6


 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 247:Core/Src/main.c ****   }
 248:Core/Src/main.c ****   /* USER CODE END 3 */
 249:Core/Src/main.c **** }
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** /**
 252:Core/Src/main.c ****   * @brief System Clock Configuration
 253:Core/Src/main.c ****   * @retval None
 254:Core/Src/main.c ****   */
 255:Core/Src/main.c **** void SystemClock_Config(void)
 256:Core/Src/main.c **** {
 257:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 258:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 261:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 262:Core/Src/main.c ****   */
 263:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 264:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 265:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 266:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 267:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 268:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 269:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 270:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 271:Core/Src/main.c ****   {
 272:Core/Src/main.c ****     Error_Handler();
 273:Core/Src/main.c ****   }
 274:Core/Src/main.c **** 
 275:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 276:Core/Src/main.c ****   */
 277:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 278:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 279:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 280:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 281:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 282:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 285:Core/Src/main.c ****   {
 286:Core/Src/main.c ****     Error_Handler();
 287:Core/Src/main.c ****   }
 288:Core/Src/main.c **** }
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** /**
 291:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 292:Core/Src/main.c ****   * @param None
 293:Core/Src/main.c ****   * @retval None
 294:Core/Src/main.c ****   */
 295:Core/Src/main.c **** static void MX_SPI2_Init(void)
 296:Core/Src/main.c **** {
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 301:Core/Src/main.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 7


 302:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 305:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 306:Core/Src/main.c ****   hspi2.Instance = SPI2;
 307:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 308:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_1LINE;
 309:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 310:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 311:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 312:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 313:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 314:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 315:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 316:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 317:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 318:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 319:Core/Src/main.c ****   {
 320:Core/Src/main.c ****     Error_Handler();
 321:Core/Src/main.c ****   }
 322:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 325:Core/Src/main.c **** 
 326:Core/Src/main.c **** }
 327:Core/Src/main.c **** 
 328:Core/Src/main.c **** /**
 329:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 330:Core/Src/main.c ****   * @param None
 331:Core/Src/main.c ****   * @retval None
 332:Core/Src/main.c ****   */
 333:Core/Src/main.c **** static void MX_TIM2_Init(void)
 334:Core/Src/main.c **** {
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 337:Core/Src/main.c **** 
 338:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 341:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 342:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 345:Core/Src/main.c **** 
 346:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 347:Core/Src/main.c ****   htim2.Instance = TIM2;
 348:Core/Src/main.c ****   htim2.Init.Prescaler = 1444-1;
 349:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 350:Core/Src/main.c ****   htim2.Init.Period = 1000-1;
 351:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 352:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 353:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 354:Core/Src/main.c ****   {
 355:Core/Src/main.c ****     Error_Handler();
 356:Core/Src/main.c ****   }
 357:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 358:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 8


 359:Core/Src/main.c ****   {
 360:Core/Src/main.c ****     Error_Handler();
 361:Core/Src/main.c ****   }
 362:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 363:Core/Src/main.c ****   {
 364:Core/Src/main.c ****     Error_Handler();
 365:Core/Src/main.c ****   }
 366:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 367:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 368:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 369:Core/Src/main.c ****   {
 370:Core/Src/main.c ****     Error_Handler();
 371:Core/Src/main.c ****   }
 372:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 373:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 374:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 375:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 376:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 377:Core/Src/main.c ****   {
 378:Core/Src/main.c ****     Error_Handler();
 379:Core/Src/main.c ****   }
 380:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 383:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 384:Core/Src/main.c **** 
 385:Core/Src/main.c **** }
 386:Core/Src/main.c **** 
 387:Core/Src/main.c **** /**
 388:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 389:Core/Src/main.c ****   * @param None
 390:Core/Src/main.c ****   * @retval None
 391:Core/Src/main.c ****   */
 392:Core/Src/main.c **** static void MX_TIM3_Init(void)
 393:Core/Src/main.c **** {
 394:Core/Src/main.c **** 
 395:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 398:Core/Src/main.c **** 
 399:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 400:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 405:Core/Src/main.c ****   htim3.Instance = TIM3;
 406:Core/Src/main.c ****   htim3.Init.Prescaler = 72-1;
 407:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 408:Core/Src/main.c ****   htim3.Init.Period = 65535;
 409:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 410:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 411:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 412:Core/Src/main.c ****   {
 413:Core/Src/main.c ****     Error_Handler();
 414:Core/Src/main.c ****   }
 415:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 9


 416:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 417:Core/Src/main.c ****   {
 418:Core/Src/main.c ****     Error_Handler();
 419:Core/Src/main.c ****   }
 420:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 421:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 422:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 423:Core/Src/main.c ****   {
 424:Core/Src/main.c ****     Error_Handler();
 425:Core/Src/main.c ****   }
 426:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 427:Core/Src/main.c **** 
 428:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 429:Core/Src/main.c **** 
 430:Core/Src/main.c **** }
 431:Core/Src/main.c **** 
 432:Core/Src/main.c **** /**
 433:Core/Src/main.c ****   * @brief USART3 Initialization Function
 434:Core/Src/main.c ****   * @param None
 435:Core/Src/main.c ****   * @retval None
 436:Core/Src/main.c ****   */
 437:Core/Src/main.c **** static void MX_USART3_UART_Init(void)
 438:Core/Src/main.c **** {
 439:Core/Src/main.c **** 
 440:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 0 */
 441:Core/Src/main.c **** 
 442:Core/Src/main.c ****   /* USER CODE END USART3_Init 0 */
 443:Core/Src/main.c **** 
 444:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 1 */
 445:Core/Src/main.c **** 
 446:Core/Src/main.c ****   /* USER CODE END USART3_Init 1 */
 447:Core/Src/main.c ****   huart3.Instance = USART3;
 448:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 449:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 450:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 451:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 452:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 453:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 454:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 455:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 456:Core/Src/main.c ****   {
 457:Core/Src/main.c ****     Error_Handler();
 458:Core/Src/main.c ****   }
 459:Core/Src/main.c ****   /* USER CODE BEGIN USART3_Init 2 */
 460:Core/Src/main.c **** 
 461:Core/Src/main.c ****   /* USER CODE END USART3_Init 2 */
 462:Core/Src/main.c **** 
 463:Core/Src/main.c **** }
 464:Core/Src/main.c **** 
 465:Core/Src/main.c **** /**
 466:Core/Src/main.c ****   * @brief GPIO Initialization Function
 467:Core/Src/main.c ****   * @param None
 468:Core/Src/main.c ****   * @retval None
 469:Core/Src/main.c ****   */
 470:Core/Src/main.c **** static void MX_GPIO_Init(void)
 471:Core/Src/main.c **** {
  39              		.loc 1 471 1 view -0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 10


  40              		.cfi_startproc
  41              		@ args = 0, pretend = 0, frame = 32
  42              		@ frame_needed = 0, uses_anonymous_args = 0
  43 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  44              	.LCFI0:
  45              		.cfi_def_cfa_offset 24
  46              		.cfi_offset 4, -24
  47              		.cfi_offset 5, -20
  48              		.cfi_offset 6, -16
  49              		.cfi_offset 7, -12
  50              		.cfi_offset 8, -8
  51              		.cfi_offset 14, -4
  52 0004 88B0     		sub	sp, sp, #32
  53              	.LCFI1:
  54              		.cfi_def_cfa_offset 56
 472:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  55              		.loc 1 472 3 view .LVU1
  56              		.loc 1 472 20 is_stmt 0 view .LVU2
  57 0006 0024     		movs	r4, #0
  58 0008 0494     		str	r4, [sp, #16]
  59 000a 0594     		str	r4, [sp, #20]
  60 000c 0694     		str	r4, [sp, #24]
  61 000e 0794     		str	r4, [sp, #28]
 473:Core/Src/main.c **** 
 474:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 475:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  62              		.loc 1 475 3 is_stmt 1 view .LVU3
  63              	.LBB4:
  64              		.loc 1 475 3 view .LVU4
  65              		.loc 1 475 3 view .LVU5
  66 0010 1F4B     		ldr	r3, .L3
  67 0012 9A69     		ldr	r2, [r3, #24]
  68 0014 42F02002 		orr	r2, r2, #32
  69 0018 9A61     		str	r2, [r3, #24]
  70              		.loc 1 475 3 view .LVU6
  71 001a 9A69     		ldr	r2, [r3, #24]
  72 001c 02F02002 		and	r2, r2, #32
  73 0020 0192     		str	r2, [sp, #4]
  74              		.loc 1 475 3 view .LVU7
  75 0022 019A     		ldr	r2, [sp, #4]
  76              	.LBE4:
  77              		.loc 1 475 3 view .LVU8
 476:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  78              		.loc 1 476 3 view .LVU9
  79              	.LBB5:
  80              		.loc 1 476 3 view .LVU10
  81              		.loc 1 476 3 view .LVU11
  82 0024 9A69     		ldr	r2, [r3, #24]
  83 0026 42F00402 		orr	r2, r2, #4
  84 002a 9A61     		str	r2, [r3, #24]
  85              		.loc 1 476 3 view .LVU12
  86 002c 9A69     		ldr	r2, [r3, #24]
  87 002e 02F00402 		and	r2, r2, #4
  88 0032 0292     		str	r2, [sp, #8]
  89              		.loc 1 476 3 view .LVU13
  90 0034 029A     		ldr	r2, [sp, #8]
  91              	.LBE5:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 11


  92              		.loc 1 476 3 view .LVU14
 477:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  93              		.loc 1 477 3 view .LVU15
  94              	.LBB6:
  95              		.loc 1 477 3 view .LVU16
  96              		.loc 1 477 3 view .LVU17
  97 0036 9A69     		ldr	r2, [r3, #24]
  98 0038 42F00802 		orr	r2, r2, #8
  99 003c 9A61     		str	r2, [r3, #24]
 100              		.loc 1 477 3 view .LVU18
 101 003e 9B69     		ldr	r3, [r3, #24]
 102 0040 03F00803 		and	r3, r3, #8
 103 0044 0393     		str	r3, [sp, #12]
 104              		.loc 1 477 3 view .LVU19
 105 0046 039B     		ldr	r3, [sp, #12]
 106              	.LBE6:
 107              		.loc 1 477 3 view .LVU20
 478:Core/Src/main.c **** 
 479:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 480:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2, GPIO_PIN_RESET);
 108              		.loc 1 480 3 view .LVU21
 109 0048 DFF84880 		ldr	r8, .L3+4
 110 004c 2246     		mov	r2, r4
 111 004e 0721     		movs	r1, #7
 112 0050 4046     		mov	r0, r8
 113 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 114              	.LVL0:
 481:Core/Src/main.c **** 
 482:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 483:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 115              		.loc 1 483 3 view .LVU22
 116 0056 104E     		ldr	r6, .L3+8
 117 0058 2246     		mov	r2, r4
 118 005a 0121     		movs	r1, #1
 119 005c 3046     		mov	r0, r6
 120 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 121              	.LVL1:
 484:Core/Src/main.c **** 
 485:Core/Src/main.c ****   /*Configure GPIO pins : PA0 PA1 PA2 */
 486:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2;
 122              		.loc 1 486 3 view .LVU23
 123              		.loc 1 486 23 is_stmt 0 view .LVU24
 124 0062 0723     		movs	r3, #7
 125 0064 0493     		str	r3, [sp, #16]
 487:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 126              		.loc 1 487 3 is_stmt 1 view .LVU25
 127              		.loc 1 487 24 is_stmt 0 view .LVU26
 128 0066 0125     		movs	r5, #1
 129 0068 0595     		str	r5, [sp, #20]
 488:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 130              		.loc 1 488 3 is_stmt 1 view .LVU27
 131              		.loc 1 488 24 is_stmt 0 view .LVU28
 132 006a 0695     		str	r5, [sp, #24]
 489:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 133              		.loc 1 489 3 is_stmt 1 view .LVU29
 134              		.loc 1 489 25 is_stmt 0 view .LVU30
 135 006c 0227     		movs	r7, #2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 12


 136 006e 0797     		str	r7, [sp, #28]
 490:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 137              		.loc 1 490 3 is_stmt 1 view .LVU31
 138 0070 04A9     		add	r1, sp, #16
 139 0072 4046     		mov	r0, r8
 140 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 141              	.LVL2:
 491:Core/Src/main.c **** 
 492:Core/Src/main.c ****   /*Configure GPIO pin : PB0 */
 493:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
 142              		.loc 1 493 3 view .LVU32
 143              		.loc 1 493 23 is_stmt 0 view .LVU33
 144 0078 0495     		str	r5, [sp, #16]
 494:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 145              		.loc 1 494 3 is_stmt 1 view .LVU34
 146              		.loc 1 494 24 is_stmt 0 view .LVU35
 147 007a 0595     		str	r5, [sp, #20]
 495:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 148              		.loc 1 495 3 is_stmt 1 view .LVU36
 149              		.loc 1 495 24 is_stmt 0 view .LVU37
 150 007c 0694     		str	r4, [sp, #24]
 496:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 151              		.loc 1 496 3 is_stmt 1 view .LVU38
 152              		.loc 1 496 25 is_stmt 0 view .LVU39
 153 007e 0797     		str	r7, [sp, #28]
 497:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 154              		.loc 1 497 3 is_stmt 1 view .LVU40
 155 0080 04A9     		add	r1, sp, #16
 156 0082 3046     		mov	r0, r6
 157 0084 FFF7FEFF 		bl	HAL_GPIO_Init
 158              	.LVL3:
 498:Core/Src/main.c **** 
 499:Core/Src/main.c **** }
 159              		.loc 1 499 1 is_stmt 0 view .LVU41
 160 0088 08B0     		add	sp, sp, #32
 161              	.LCFI2:
 162              		.cfi_def_cfa_offset 24
 163              		@ sp needed
 164 008a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 165              	.L4:
 166 008e 00BF     		.align	2
 167              	.L3:
 168 0090 00100240 		.word	1073876992
 169 0094 00080140 		.word	1073809408
 170 0098 000C0140 		.word	1073810432
 171              		.cfi_endproc
 172              	.LFE81:
 174              		.section	.text.log_data,"ax",%progbits
 175              		.align	1
 176              		.global	log_data
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 181              	log_data:
 182              	.LVL4:
 183              	.LFB73:
 113:Core/Src/main.c ****   HAL_UART_Transmit(&huart3, (uint8_t *)buf, strlen(buf), 100);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 13


 184              		.loc 1 113 1 is_stmt 1 view -0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 113:Core/Src/main.c ****   HAL_UART_Transmit(&huart3, (uint8_t *)buf, strlen(buf), 100);
 188              		.loc 1 113 1 is_stmt 0 view .LVU43
 189 0000 10B5     		push	{r4, lr}
 190              	.LCFI3:
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 4, -8
 193              		.cfi_offset 14, -4
 194 0002 0446     		mov	r4, r0
 114:Core/Src/main.c **** }
 195              		.loc 1 114 3 is_stmt 1 view .LVU44
 114:Core/Src/main.c **** }
 196              		.loc 1 114 46 is_stmt 0 view .LVU45
 197 0004 FFF7FEFF 		bl	strlen
 198              	.LVL5:
 114:Core/Src/main.c **** }
 199              		.loc 1 114 3 view .LVU46
 200 0008 6423     		movs	r3, #100
 201 000a 82B2     		uxth	r2, r0
 202 000c 2146     		mov	r1, r4
 203 000e 0248     		ldr	r0, .L7
 204 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 205              	.LVL6:
 115:Core/Src/main.c **** 
 206              		.loc 1 115 1 view .LVU47
 207 0014 10BD     		pop	{r4, pc}
 208              	.LVL7:
 209              	.L8:
 115:Core/Src/main.c **** 
 210              		.loc 1 115 1 view .LVU48
 211 0016 00BF     		.align	2
 212              	.L7:
 213 0018 00000000 		.word	.LANCHOR0
 214              		.cfi_endproc
 215              	.LFE73:
 217              		.section	.rodata.Task_Sensor.str1.4,"aMS",%progbits,1
 218              		.align	2
 219              	.LC8:
 220 0000 7461736B 		.ascii	"task sensor\012\000"
 220      2073656E 
 220      736F720A 
 220      00
 221              		.section	.text.Task_Sensor,"ax",%progbits
 222              		.align	1
 223              		.global	Task_Sensor
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 228              	Task_Sensor:
 229              	.LFB82:
 500:Core/Src/main.c **** 
 501:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 502:Core/Src/main.c **** 
 503:Core/Src/main.c **** /* USER CODE END 4 */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 14


 504:Core/Src/main.c **** 
 505:Core/Src/main.c **** /* USER CODE BEGIN Header_Task_Sensor */
 506:Core/Src/main.c **** /**
 507:Core/Src/main.c ****  * @brief  Function implementing the Task1 thread.
 508:Core/Src/main.c ****  * @param  argument: Not used
 509:Core/Src/main.c ****  * @retval None
 510:Core/Src/main.c ****  */
 511:Core/Src/main.c **** /* USER CODE END Header_Task_Sensor */
 512:Core/Src/main.c **** void Task_Sensor(void const * argument)
 513:Core/Src/main.c **** {
 230              		.loc 1 513 1 is_stmt 1 view -0
 231              		.cfi_startproc
 232              		@ Volatile: function does not return.
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              	.LVL8:
 236              		.loc 1 513 1 is_stmt 0 view .LVU50
 237 0000 08B5     		push	{r3, lr}
 238              	.LCFI4:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 3, -8
 241              		.cfi_offset 14, -4
 242              	.LVL9:
 243              	.L10:
 514:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 515:Core/Src/main.c ****   /* Infinite loop */
 516:Core/Src/main.c ****   for (;;)
 244              		.loc 1 516 3 is_stmt 1 discriminator 1 view .LVU51
 517:Core/Src/main.c ****   {
 518:Core/Src/main.c ****     log_data("task sensor\n");
 245              		.loc 1 518 5 discriminator 1 view .LVU52
 246 0002 0648     		ldr	r0, .L12
 247 0004 FFF7FEFF 		bl	log_data
 248              	.LVL10:
 519:Core/Src/main.c ****     //read sensor
 520:Core/Src/main.c ****     osSemaphoreRelease(SensorSemHandle);
 249              		.loc 1 520 5 discriminator 1 view .LVU53
 250 0008 054B     		ldr	r3, .L12+4
 251 000a 1868     		ldr	r0, [r3]
 252 000c FFF7FEFF 		bl	osSemaphoreRelease
 253              	.LVL11:
 521:Core/Src/main.c ****     osDelay(1000);
 254              		.loc 1 521 5 discriminator 1 view .LVU54
 255 0010 4FF47A70 		mov	r0, #1000
 256 0014 FFF7FEFF 		bl	osDelay
 257              	.LVL12:
 516:Core/Src/main.c ****   {
 258              		.loc 1 516 9 discriminator 1 view .LVU55
 259 0018 F3E7     		b	.L10
 260              	.L13:
 261 001a 00BF     		.align	2
 262              	.L12:
 263 001c 00000000 		.word	.LC8
 264 0020 00000000 		.word	.LANCHOR1
 265              		.cfi_endproc
 266              	.LFE82:
 268              		.section	.rodata.Task_Servo.str1.4,"aMS",%progbits,1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 15


 269              		.align	2
 270              	.LC9:
 271 0000 7461736B 		.ascii	"task servo\012\000"
 271      20736572 
 271      766F0A00 
 272              		.align	2
 273              	.LC10:
 274 000c 7461736B 		.ascii	"task servo mode auto\012\000"
 274      20736572 
 274      766F206D 
 274      6F646520 
 274      6175746F 
 275 0022 0000     		.align	2
 276              	.LC11:
 277 0024 7461736B 		.ascii	"task servo mode manual\012\000"
 277      20736572 
 277      766F206D 
 277      6F646520 
 277      6D616E75 
 278              		.global	__aeabi_i2d
 279              		.global	__aeabi_ddiv
 280              		.global	__aeabi_d2iz
 281              		.section	.text.Task_Servo,"ax",%progbits
 282              		.align	1
 283              		.global	Task_Servo
 284              		.syntax unified
 285              		.thumb
 286              		.thumb_func
 288              	Task_Servo:
 289              	.LFB83:
 522:Core/Src/main.c ****   }
 523:Core/Src/main.c ****   
 524:Core/Src/main.c ****   /* USER CODE END 5 */
 525:Core/Src/main.c **** }
 526:Core/Src/main.c **** 
 527:Core/Src/main.c **** /* USER CODE BEGIN Header_Task_Servo */
 528:Core/Src/main.c **** /**
 529:Core/Src/main.c ****  * @brief Function implementing the Task2 thread.
 530:Core/Src/main.c ****  * @param argument: Not used
 531:Core/Src/main.c ****  * @retval None
 532:Core/Src/main.c ****  */
 533:Core/Src/main.c **** /* USER CODE END Header_Task_Servo */
 534:Core/Src/main.c **** void Task_Servo(void const * argument)
 535:Core/Src/main.c **** {
 290              		.loc 1 535 1 view -0
 291              		.cfi_startproc
 292              		@ Volatile: function does not return.
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              	.LVL13:
 296              		.loc 1 535 1 is_stmt 0 view .LVU57
 297 0000 00B5     		push	{lr}
 298              	.LCFI5:
 299              		.cfi_def_cfa_offset 4
 300              		.cfi_offset 14, -4
 301 0002 85B0     		sub	sp, sp, #20
 302              	.LCFI6:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 16


 303              		.cfi_def_cfa_offset 24
 304 0004 24E0     		b	.L20
 305              	.LVL14:
 306              	.L23:
 536:Core/Src/main.c ****   /* USER CODE BEGIN Task_Servo */
 537:Core/Src/main.c ****   /* Infinite loop */
 538:Core/Src/main.c ****   for (;;)
 539:Core/Src/main.c ****   {
 540:Core/Src/main.c ****     if (osSemaphoreWait(SensorSemHandle, osWaitForever) == osOK|| osSemaphoreWait(DataSemHandle, os
 307              		.loc 1 540 67 discriminator 1 view .LVU58
 308 0006 4FF0FF31 		mov	r1, #-1
 309 000a 314B     		ldr	r3, .L24+8
 310 000c 1868     		ldr	r0, [r3]
 311 000e FFF7FEFF 		bl	osSemaphoreWait
 312              	.LVL15:
 313              		.loc 1 540 64 discriminator 1 view .LVU59
 314 0012 C8B9     		cbnz	r0, .L16
 315 0014 24E0     		b	.L15
 316              	.L18:
 541:Core/Src/main.c ****     {
 542:Core/Src/main.c ****       log_data("task servo\n");
 543:Core/Src/main.c ****       if (Mode == Mode_auto)
 544:Core/Src/main.c ****       {
 545:Core/Src/main.c ****         log_data("task servo mode auto\n");
 546:Core/Src/main.c ****         if (temp > 30)
 547:Core/Src/main.c ****         {
 548:Core/Src/main.c ****           TIM2->CCR1 = 25;
 549:Core/Src/main.c ****           // sprintf(rota, "Rota: %d  ", 0);
 550:Core/Src/main.c ****           // log_data(rota);
 551:Core/Src/main.c ****           // log_data("\n");
 552:Core/Src/main.c ****           ST7735_WriteString(0, 3 * 10 * 3, rota, Font_11x18, ST7735_GREEN, ST7735_BLACK);
 553:Core/Src/main.c ****         }
 554:Core/Src/main.c ****         //>30C -> close curtain
 555:Core/Src/main.c ****         else
 556:Core/Src/main.c ****         {
 557:Core/Src/main.c ****           TIM2->CCR1 = 125;
 317              		.loc 1 557 11 is_stmt 1 view .LVU60
 318              		.loc 1 557 22 is_stmt 0 view .LVU61
 319 0016 4FF08043 		mov	r3, #1073741824
 320 001a 7D22     		movs	r2, #125
 321 001c 5A63     		str	r2, [r3, #52]
 558:Core/Src/main.c ****           // sprintf(rota, "Rota: %d  ", 180);
 559:Core/Src/main.c ****           // log_data(rota);
 560:Core/Src/main.c ****           // log_data("\n");
 561:Core/Src/main.c ****           ST7735_WriteString(0, 3 * 10 * 3, rota, Font_11x18, ST7735_GREEN, ST7735_BLACK);
 322              		.loc 1 561 11 is_stmt 1 view .LVU62
 323 001e 2D4B     		ldr	r3, .L24+12
 324 0020 0020     		movs	r0, #0
 325 0022 0290     		str	r0, [sp, #8]
 326 0024 4FF4FC62 		mov	r2, #2016
 327 0028 0192     		str	r2, [sp, #4]
 328 002a 5A68     		ldr	r2, [r3, #4]
 329 002c 0092     		str	r2, [sp]
 330 002e 1B68     		ldr	r3, [r3]
 331 0030 294A     		ldr	r2, .L24+16
 332 0032 5A21     		movs	r1, #90
 333 0034 FFF7FEFF 		bl	ST7735_WriteString
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 17


 334              	.LVL16:
 335              	.L17:
 562:Core/Src/main.c ****         }
 563:Core/Src/main.c ****       }
 564:Core/Src/main.c ****       if (Mode == Mode_manual)
 336              		.loc 1 564 7 view .LVU63
 337              		.loc 1 564 16 is_stmt 0 view .LVU64
 338 0038 284B     		ldr	r3, .L24+20
 339 003a 1B68     		ldr	r3, [r3]
 340              		.loc 1 564 10 view .LVU65
 341 003c 012B     		cmp	r3, #1
 342 003e 2FD0     		beq	.L22
 343              	.L19:
 565:Core/Src/main.c ****       {
 566:Core/Src/main.c ****         log_data("task servo mode manual\n");
 567:Core/Src/main.c ****         TIM2->CCR1 = (int)((PC_rota + 45) / 1.8);
 568:Core/Src/main.c ****       }
 569:Core/Src/main.c ****       osSemaphoreRelease(ServoSemHandle);
 344              		.loc 1 569 7 is_stmt 1 view .LVU66
 345 0040 274B     		ldr	r3, .L24+24
 346 0042 1868     		ldr	r0, [r3]
 347 0044 FFF7FEFF 		bl	osSemaphoreRelease
 348              	.LVL17:
 349              	.L16:
 570:Core/Src/main.c ****     }
 571:Core/Src/main.c ****     osDelay(500);
 350              		.loc 1 571 5 view .LVU67
 351 0048 4FF4FA70 		mov	r0, #500
 352 004c FFF7FEFF 		bl	osDelay
 353              	.LVL18:
 538:Core/Src/main.c ****   {
 354              		.loc 1 538 9 view .LVU68
 355              	.L20:
 538:Core/Src/main.c ****   {
 356              		.loc 1 538 3 view .LVU69
 540:Core/Src/main.c ****     {
 357              		.loc 1 540 5 view .LVU70
 540:Core/Src/main.c ****     {
 358              		.loc 1 540 9 is_stmt 0 view .LVU71
 359 0050 4FF0FF31 		mov	r1, #-1
 360 0054 234B     		ldr	r3, .L24+28
 361 0056 1868     		ldr	r0, [r3]
 362 0058 FFF7FEFF 		bl	osSemaphoreWait
 363              	.LVL19:
 540:Core/Src/main.c ****     {
 364              		.loc 1 540 8 view .LVU72
 365 005c 0028     		cmp	r0, #0
 366 005e D2D1     		bne	.L23
 367              	.L15:
 542:Core/Src/main.c ****       if (Mode == Mode_auto)
 368              		.loc 1 542 7 is_stmt 1 view .LVU73
 369 0060 2148     		ldr	r0, .L24+32
 370 0062 FFF7FEFF 		bl	log_data
 371              	.LVL20:
 543:Core/Src/main.c ****       {
 372              		.loc 1 543 7 view .LVU74
 543:Core/Src/main.c ****       {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 18


 373              		.loc 1 543 16 is_stmt 0 view .LVU75
 374 0066 1D4B     		ldr	r3, .L24+20
 375 0068 1B68     		ldr	r3, [r3]
 543:Core/Src/main.c ****       {
 376              		.loc 1 543 10 view .LVU76
 377 006a 002B     		cmp	r3, #0
 378 006c E4D1     		bne	.L17
 545:Core/Src/main.c ****         if (temp > 30)
 379              		.loc 1 545 9 is_stmt 1 view .LVU77
 380 006e 1F48     		ldr	r0, .L24+36
 381 0070 FFF7FEFF 		bl	log_data
 382              	.LVL21:
 546:Core/Src/main.c ****         {
 383              		.loc 1 546 9 view .LVU78
 546:Core/Src/main.c ****         {
 384              		.loc 1 546 18 is_stmt 0 view .LVU79
 385 0074 1E4B     		ldr	r3, .L24+40
 386 0076 1B68     		ldr	r3, [r3]
 546:Core/Src/main.c ****         {
 387              		.loc 1 546 12 view .LVU80
 388 0078 1E2B     		cmp	r3, #30
 389 007a CCDD     		ble	.L18
 548:Core/Src/main.c ****           // sprintf(rota, "Rota: %d  ", 0);
 390              		.loc 1 548 11 is_stmt 1 view .LVU81
 548:Core/Src/main.c ****           // sprintf(rota, "Rota: %d  ", 0);
 391              		.loc 1 548 22 is_stmt 0 view .LVU82
 392 007c 4FF08043 		mov	r3, #1073741824
 393 0080 1922     		movs	r2, #25
 394 0082 5A63     		str	r2, [r3, #52]
 552:Core/Src/main.c ****         }
 395              		.loc 1 552 11 is_stmt 1 view .LVU83
 396 0084 134B     		ldr	r3, .L24+12
 397 0086 0020     		movs	r0, #0
 398 0088 0290     		str	r0, [sp, #8]
 399 008a 4FF4FC62 		mov	r2, #2016
 400 008e 0192     		str	r2, [sp, #4]
 401 0090 5A68     		ldr	r2, [r3, #4]
 402 0092 0092     		str	r2, [sp]
 403 0094 1B68     		ldr	r3, [r3]
 404 0096 104A     		ldr	r2, .L24+16
 405 0098 5A21     		movs	r1, #90
 406 009a FFF7FEFF 		bl	ST7735_WriteString
 407              	.LVL22:
 408 009e CBE7     		b	.L17
 409              	.L22:
 566:Core/Src/main.c ****         TIM2->CCR1 = (int)((PC_rota + 45) / 1.8);
 410              		.loc 1 566 9 view .LVU84
 411 00a0 1448     		ldr	r0, .L24+44
 412 00a2 FFF7FEFF 		bl	log_data
 413              	.LVL23:
 567:Core/Src/main.c ****       }
 414              		.loc 1 567 9 view .LVU85
 567:Core/Src/main.c ****       }
 415              		.loc 1 567 37 is_stmt 0 view .LVU86
 416 00a6 144B     		ldr	r3, .L24+48
 417 00a8 1868     		ldr	r0, [r3]
 567:Core/Src/main.c ****       }
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 19


 418              		.loc 1 567 43 view .LVU87
 419 00aa 2D30     		adds	r0, r0, #45
 420 00ac FFF7FEFF 		bl	__aeabi_i2d
 421              	.LVL24:
 422 00b0 05A3     		adr	r3, .L24
 423 00b2 D3E90023 		ldrd	r2, [r3]
 424 00b6 FFF7FEFF 		bl	__aeabi_ddiv
 425              	.LVL25:
 567:Core/Src/main.c ****       }
 426              		.loc 1 567 22 view .LVU88
 427 00ba FFF7FEFF 		bl	__aeabi_d2iz
 428              	.LVL26:
 567:Core/Src/main.c ****       }
 429              		.loc 1 567 20 view .LVU89
 430 00be 4FF08043 		mov	r3, #1073741824
 431 00c2 5863     		str	r0, [r3, #52]
 432 00c4 BCE7     		b	.L19
 433              	.L25:
 434 00c6 00BF     		.align	3
 435              	.L24:
 436 00c8 CDCCCCCC 		.word	-858993459
 437 00cc CCCCFC3F 		.word	1073532108
 438 00d0 00000000 		.word	.LANCHOR2
 439 00d4 00000000 		.word	Font_11x18
 440 00d8 00000000 		.word	.LANCHOR5
 441 00dc 00000000 		.word	.LANCHOR3
 442 00e0 00000000 		.word	.LANCHOR7
 443 00e4 00000000 		.word	.LANCHOR1
 444 00e8 00000000 		.word	.LC9
 445 00ec 0C000000 		.word	.LC10
 446 00f0 00000000 		.word	.LANCHOR4
 447 00f4 24000000 		.word	.LC11
 448 00f8 00000000 		.word	.LANCHOR6
 449              		.cfi_endproc
 450              	.LFE83:
 452              		.section	.rodata.Task_Display.str1.4,"aMS",%progbits,1
 453              		.align	2
 454              	.LC12:
 455 0000 5461736B 		.ascii	"Task Display\012\000"
 455      20446973 
 455      706C6179 
 455      0A00
 456 000e 0000     		.align	2
 457              	.LC13:
 458 0010 54656D70 		.ascii	"Temp: %d C\000"
 458      3A202564 
 458      204300
 459 001b 00       		.align	2
 460              	.LC14:
 461 001c 48756D69 		.ascii	"Humi: %d \000"
 461      3A202564 
 461      2000
 462              		.global	__aeabi_ui2d
 463              		.global	__aeabi_dmul
 464              		.global	__aeabi_dsub
 465 0026 0000     		.align	2
 466              	.LC15:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 20


 467 0028 526F7461 		.ascii	"Rota: %d  \000"
 467      3A202564 
 467      202000
 468 0033 00       		.align	2
 469              	.LC16:
 470 0034 0A00     		.ascii	"\012\000"
 471 0036 0000     		.align	2
 472              	.LC17:
 473 0038 2500     		.ascii	"%\000"
 474              		.section	.text.Task_Display,"ax",%progbits
 475              		.align	1
 476              		.global	Task_Display
 477              		.syntax unified
 478              		.thumb
 479              		.thumb_func
 481              	Task_Display:
 482              	.LFB84:
 572:Core/Src/main.c ****   }
 573:Core/Src/main.c ****   /* USER CODE END Task_Servo */
 574:Core/Src/main.c **** }
 575:Core/Src/main.c **** 
 576:Core/Src/main.c **** /* USER CODE BEGIN Header_Task_Display */
 577:Core/Src/main.c **** /**
 578:Core/Src/main.c ****  * @brief Function implementing the Task3 thread.
 579:Core/Src/main.c ****  * @param argument: Not used
 580:Core/Src/main.c ****  * @retval None
 581:Core/Src/main.c ****  */
 582:Core/Src/main.c **** /* USER CODE END Header_Task_Display */
 583:Core/Src/main.c **** void Task_Display(void const * argument)
 584:Core/Src/main.c **** {
 483              		.loc 1 584 1 is_stmt 1 view -0
 484              		.cfi_startproc
 485              		@ Volatile: function does not return.
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488              	.LVL27:
 489              		.loc 1 584 1 is_stmt 0 view .LVU91
 490 0000 80B5     		push	{r7, lr}
 491              	.LCFI7:
 492              		.cfi_def_cfa_offset 8
 493              		.cfi_offset 7, -8
 494              		.cfi_offset 14, -4
 495 0002 84B0     		sub	sp, sp, #16
 496              	.LCFI8:
 497              		.cfi_def_cfa_offset 24
 498              	.LVL28:
 499              	.L27:
 585:Core/Src/main.c ****   /* USER CODE BEGIN Task_Display */
 586:Core/Src/main.c ****   /* Infinite loop */
 587:Core/Src/main.c ****   for (;;)
 500              		.loc 1 587 3 is_stmt 1 discriminator 1 view .LVU92
 588:Core/Src/main.c ****   {
 589:Core/Src/main.c ****     osSemaphoreWait(ServoSemHandle, osWaitForever);
 501              		.loc 1 589 5 discriminator 1 view .LVU93
 502 0004 4FF0FF31 		mov	r1, #-1
 503 0008 374B     		ldr	r3, .L29+8
 504 000a 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 21


 505 000c FFF7FEFF 		bl	osSemaphoreWait
 506              	.LVL29:
 590:Core/Src/main.c ****     log_data("Task Display\n");
 507              		.loc 1 590 5 discriminator 1 view .LVU94
 508 0010 3648     		ldr	r0, .L29+12
 509 0012 FFF7FEFF 		bl	log_data
 510              	.LVL30:
 591:Core/Src/main.c ****     sprintf(buf_temp, "Temp: %d C", temp);
 511              		.loc 1 591 5 discriminator 1 view .LVU95
 512 0016 364F     		ldr	r7, .L29+16
 513 0018 364B     		ldr	r3, .L29+20
 514 001a 1A68     		ldr	r2, [r3]
 515 001c 3649     		ldr	r1, .L29+24
 516 001e 3846     		mov	r0, r7
 517 0020 FFF7FEFF 		bl	sprintf
 518              	.LVL31:
 592:Core/Src/main.c ****     sprintf(buf_humi, "Humi: %d ", humi);
 519              		.loc 1 592 5 discriminator 1 view .LVU96
 520 0024 354E     		ldr	r6, .L29+28
 521 0026 364B     		ldr	r3, .L29+32
 522 0028 1A68     		ldr	r2, [r3]
 523 002a 3649     		ldr	r1, .L29+36
 524 002c 3046     		mov	r0, r6
 525 002e FFF7FEFF 		bl	sprintf
 526              	.LVL32:
 593:Core/Src/main.c ****     sprintf(rota, "Rota: %d  ", (int)(1.8*(TIM2->CCR1) - 45));
 527              		.loc 1 593 5 discriminator 1 view .LVU97
 528              		.loc 1 593 48 is_stmt 0 discriminator 1 view .LVU98
 529 0032 4FF08043 		mov	r3, #1073741824
 530 0036 586B     		ldr	r0, [r3, #52]
 531              		.loc 1 593 42 discriminator 1 view .LVU99
 532 0038 FFF7FEFF 		bl	__aeabi_ui2d
 533              	.LVL33:
 534 003c 28A3     		adr	r3, .L29
 535 003e D3E90023 		ldrd	r2, [r3]
 536 0042 FFF7FEFF 		bl	__aeabi_dmul
 537              	.LVL34:
 538              		.loc 1 593 56 discriminator 1 view .LVU100
 539 0046 0022     		movs	r2, #0
 540 0048 2F4B     		ldr	r3, .L29+40
 541 004a FFF7FEFF 		bl	__aeabi_dsub
 542              	.LVL35:
 543              		.loc 1 593 5 discriminator 1 view .LVU101
 544 004e FFF7FEFF 		bl	__aeabi_d2iz
 545              	.LVL36:
 546 0052 0246     		mov	r2, r0
 547 0054 DFF8B480 		ldr	r8, .L29+44
 548 0058 2D49     		ldr	r1, .L29+48
 549 005a 4046     		mov	r0, r8
 550 005c FFF7FEFF 		bl	sprintf
 551              	.LVL37:
 594:Core/Src/main.c ****     log_data(buf_temp);
 552              		.loc 1 594 5 is_stmt 1 discriminator 1 view .LVU102
 553 0060 3846     		mov	r0, r7
 554 0062 FFF7FEFF 		bl	log_data
 555              	.LVL38:
 595:Core/Src/main.c ****     log_data("\n");
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 22


 556              		.loc 1 595 5 discriminator 1 view .LVU103
 557 0066 2B4C     		ldr	r4, .L29+52
 558 0068 2046     		mov	r0, r4
 559 006a FFF7FEFF 		bl	log_data
 560              	.LVL39:
 596:Core/Src/main.c ****     log_data(buf_humi);
 561              		.loc 1 596 5 discriminator 1 view .LVU104
 562 006e 3046     		mov	r0, r6
 563 0070 FFF7FEFF 		bl	log_data
 564              	.LVL40:
 597:Core/Src/main.c ****     log_data("\n");
 565              		.loc 1 597 5 discriminator 1 view .LVU105
 566 0074 2046     		mov	r0, r4
 567 0076 FFF7FEFF 		bl	log_data
 568              	.LVL41:
 598:Core/Src/main.c ****     ST7735_WriteString(0, 30, buf_temp, Font_11x18, ST7735_RED, ST7735_BLACK);
 569              		.loc 1 598 5 discriminator 1 view .LVU106
 570 007a 274D     		ldr	r5, .L29+56
 571 007c 0024     		movs	r4, #0
 572 007e 0294     		str	r4, [sp, #8]
 573 0080 4FF47849 		mov	r9, #63488
 574 0084 CDF80490 		str	r9, [sp, #4]
 575 0088 6B68     		ldr	r3, [r5, #4]
 576 008a 0093     		str	r3, [sp]
 577 008c 2B68     		ldr	r3, [r5]
 578 008e 3A46     		mov	r2, r7
 579 0090 1E21     		movs	r1, #30
 580 0092 2046     		mov	r0, r4
 581 0094 FFF7FEFF 		bl	ST7735_WriteString
 582              	.LVL42:
 599:Core/Src/main.c ****     ST7735_WriteString(0, 3 * 10 * 2, strcat(buf_humi, "%"), Font_11x18, ST7735_RED, ST7735_BLACK);
 583              		.loc 1 599 5 discriminator 1 view .LVU107
 584              		.loc 1 599 39 is_stmt 0 discriminator 1 view .LVU108
 585 0098 3046     		mov	r0, r6
 586 009a FFF7FEFF 		bl	strlen
 587              	.LVL43:
 588 009e 1F4B     		ldr	r3, .L29+60
 589 00a0 1B88     		ldrh	r3, [r3]	@ unaligned
 590 00a2 3352     		strh	r3, [r6, r0]	@ unaligned
 591              		.loc 1 599 5 discriminator 1 view .LVU109
 592 00a4 0294     		str	r4, [sp, #8]
 593 00a6 CDF80490 		str	r9, [sp, #4]
 594 00aa 6B68     		ldr	r3, [r5, #4]
 595 00ac 0093     		str	r3, [sp]
 596 00ae 2B68     		ldr	r3, [r5]
 597 00b0 3246     		mov	r2, r6
 598 00b2 3C21     		movs	r1, #60
 599 00b4 2046     		mov	r0, r4
 600 00b6 FFF7FEFF 		bl	ST7735_WriteString
 601              	.LVL44:
 600:Core/Src/main.c ****     ST7735_WriteString(0, 3 * 10 * 3, rota, Font_11x18, ST7735_GREEN, ST7735_BLACK);
 602              		.loc 1 600 5 is_stmt 1 discriminator 1 view .LVU110
 603 00ba 0294     		str	r4, [sp, #8]
 604 00bc 4FF4FC63 		mov	r3, #2016
 605 00c0 0193     		str	r3, [sp, #4]
 606 00c2 6B68     		ldr	r3, [r5, #4]
 607 00c4 0093     		str	r3, [sp]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 23


 608 00c6 2B68     		ldr	r3, [r5]
 609 00c8 4246     		mov	r2, r8
 610 00ca 5A21     		movs	r1, #90
 611 00cc 2046     		mov	r0, r4
 612 00ce FFF7FEFF 		bl	ST7735_WriteString
 613              	.LVL45:
 601:Core/Src/main.c ****     osDelay(500);
 614              		.loc 1 601 5 discriminator 1 view .LVU111
 615 00d2 4FF4FA70 		mov	r0, #500
 616 00d6 FFF7FEFF 		bl	osDelay
 617              	.LVL46:
 587:Core/Src/main.c ****   {
 618              		.loc 1 587 9 discriminator 1 view .LVU112
 619 00da 93E7     		b	.L27
 620              	.L30:
 621 00dc AFF30080 		.align	3
 622              	.L29:
 623 00e0 CDCCCCCC 		.word	-858993459
 624 00e4 CCCCFC3F 		.word	1073532108
 625 00e8 00000000 		.word	.LANCHOR7
 626 00ec 00000000 		.word	.LC12
 627 00f0 00000000 		.word	.LANCHOR8
 628 00f4 00000000 		.word	.LANCHOR4
 629 00f8 10000000 		.word	.LC13
 630 00fc 00000000 		.word	.LANCHOR10
 631 0100 00000000 		.word	.LANCHOR9
 632 0104 1C000000 		.word	.LC14
 633 0108 00804640 		.word	1078362112
 634 010c 00000000 		.word	.LANCHOR5
 635 0110 28000000 		.word	.LC15
 636 0114 34000000 		.word	.LC16
 637 0118 00000000 		.word	Font_11x18
 638 011c 38000000 		.word	.LC17
 639              		.cfi_endproc
 640              	.LFE84:
 642              		.section	.rodata.Task_Data.str1.4,"aMS",%progbits,1
 643              		.align	2
 644              	.LC18:
 645 0000 7461736B 		.ascii	"task uart\012\000"
 645      20756172 
 645      740A00
 646 000b 00       		.align	2
 647              	.LC19:
 648 000c 526F7461 		.ascii	"Rota\000"
 648      00
 649 0011 000000   		.align	2
 650              	.LC20:
 651 0014 63686563 		.ascii	"check data rota\012\000"
 651      6B206461 
 651      74612072 
 651      6F74610A 
 651      00
 652 0025 000000   		.align	2
 653              	.LC21:
 654 0028 252A5B5E 		.ascii	"%*[^0-9]%d\000"
 654      302D395D 
 654      256400
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 24


 655 0033 00       		.align	2
 656              	.LC22:
 657 0034 526F7461 		.ascii	"Rota: %d  \012\000"
 657      3A202564 
 657      20200A00 
 658              		.align	2
 659              	.LC23:
 660 0040 0A504320 		.ascii	"\012PC control \000"
 660      636F6E74 
 660      726F6C20 
 660      00
 661 004d 000000   		.align	2
 662              	.LC24:
 663 0050 54687265 		.ascii	"Threshold\000"
 663      73686F6C 
 663      6400
 664 005a 0000     		.align	2
 665              	.LC25:
 666 005c 63686563 		.ascii	"check data thresh\012\000"
 666      6B206461 
 666      74612074 
 666      68726573 
 666      680A00
 667 006f 00       		.align	2
 668              	.LC27:
 669 0070 25732573 		.ascii	"%s%s\000"
 669      00
 670              		.global	__aeabi_d2f
 671 0075 000000   		.align	2
 672              	.LC28:
 673 0078 0A504320 		.ascii	"\012PC set Threshold: \000"
 673      73657420 
 673      54687265 
 673      73686F6C 
 673      643A2000 
 674              		.align	2
 675              	.LC26:
 676 008c 54687265 		.ascii	"Thres: \000"
 676      733A2000 
 677              		.section	.text.Task_Data,"ax",%progbits
 678              		.align	1
 679              		.global	Task_Data
 680              		.syntax unified
 681              		.thumb
 682              		.thumb_func
 684              	Task_Data:
 685              	.LFB85:
 602:Core/Src/main.c ****   }
 603:Core/Src/main.c ****   /* USER CODE END Task_Display */
 604:Core/Src/main.c **** }
 605:Core/Src/main.c **** 
 606:Core/Src/main.c **** /* USER CODE BEGIN Header_Task_Data */
 607:Core/Src/main.c **** /**
 608:Core/Src/main.c ****  * @brief Function implementing the Task4 thread.
 609:Core/Src/main.c ****  * @param argument: Not used
 610:Core/Src/main.c ****  * @retval None
 611:Core/Src/main.c ****  */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 25


 612:Core/Src/main.c **** /* USER CODE END Header_Task_Data */
 613:Core/Src/main.c **** void Task_Data(void const * argument)
 614:Core/Src/main.c **** {
 686              		.loc 1 614 1 view -0
 687              		.cfi_startproc
 688              		@ Volatile: function does not return.
 689              		@ args = 0, pretend = 0, frame = 8
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691              	.LVL47:
 692              		.loc 1 614 1 is_stmt 0 view .LVU114
 693 0000 00B5     		push	{lr}
 694              	.LCFI9:
 695              		.cfi_def_cfa_offset 4
 696              		.cfi_offset 14, -4
 697 0002 83B0     		sub	sp, sp, #12
 698              	.LCFI10:
 699              		.cfi_def_cfa_offset 16
 700 0004 42E0     		b	.L34
 701              	.LVL48:
 702              	.L36:
 615:Core/Src/main.c ****   /* USER CODE BEGIN Task_Data */
 616:Core/Src/main.c ****   /* Infinite loop */
 617:Core/Src/main.c ****   for (;;)
 618:Core/Src/main.c ****   {
 619:Core/Src/main.c ****     osSemaphoreWait(IRQSemHandle, osWaitForever);
 620:Core/Src/main.c ****     log_data("task uart\n");
 621:Core/Src/main.c ****     if (strncmp(buffer_data, "Rota", 4) == 0)
 622:Core/Src/main.c ****     {
 623:Core/Src/main.c ****       log_data("check data rota\n");
 703              		.loc 1 623 7 is_stmt 1 view .LVU115
 704 0006 2D48     		ldr	r0, .L38
 705 0008 FFF7FEFF 		bl	log_data
 706              	.LVL49:
 624:Core/Src/main.c ****       // Parse string
 625:Core/Src/main.c ****       sscanf(buffer_data, "%*[^0-9]%d", &PC_rota);
 707              		.loc 1 625 7 view .LVU116
 708 000c 2C4D     		ldr	r5, .L38+4
 709 000e 2A46     		mov	r2, r5
 710 0010 2C49     		ldr	r1, .L38+8
 711 0012 2D48     		ldr	r0, .L38+12
 712 0014 FFF7FEFF 		bl	sscanf
 713              	.LVL50:
 626:Core/Src/main.c ****       // // control Servo
 627:Core/Src/main.c ****       sprintf(rota, "Rota: %d  \n", PC_rota);
 714              		.loc 1 627 7 view .LVU117
 715 0018 2C4C     		ldr	r4, .L38+16
 716 001a 2A68     		ldr	r2, [r5]
 717 001c 2C49     		ldr	r1, .L38+20
 718 001e 2046     		mov	r0, r4
 719 0020 FFF7FEFF 		bl	sprintf
 720              	.LVL51:
 628:Core/Src/main.c ****       log_data("\nPC control ");
 721              		.loc 1 628 7 view .LVU118
 722 0024 2B48     		ldr	r0, .L38+24
 723 0026 FFF7FEFF 		bl	log_data
 724              	.LVL52:
 629:Core/Src/main.c ****       log_data(rota);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 26


 725              		.loc 1 629 7 view .LVU119
 726 002a 2046     		mov	r0, r4
 727 002c FFF7FEFF 		bl	log_data
 728              	.LVL53:
 729 0030 3CE0     		b	.L32
 730              	.L37:
 731              	.LBB7:
 630:Core/Src/main.c ****       // ST7735_WriteString(0, 3 * 10 * 3, rota, Font_11x18, ST7735_GREEN, ST7735_BLACK);
 631:Core/Src/main.c ****     }
 632:Core/Src/main.c ****     if (strncmp(buffer_data, "Threshold", strlen("Threshold")) == 0)
 633:Core/Src/main.c ****     {
 634:Core/Src/main.c ****       log_data("check data thresh\n");
 732              		.loc 1 634 7 view .LVU120
 733 0032 2948     		ldr	r0, .L38+28
 734 0034 FFF7FEFF 		bl	log_data
 735              	.LVL54:
 635:Core/Src/main.c ****       char str_buf[] = "Thres: ";
 736              		.loc 1 635 7 view .LVU121
 737              		.loc 1 635 12 is_stmt 0 view .LVU122
 738 0038 284B     		ldr	r3, .L38+32
 739 003a 6D46     		mov	r5, sp
 740 003c 93E80300 		ldm	r3, {r0, r1}
 741 0040 85E80300 		stm	r5, {r0, r1}
 636:Core/Src/main.c ****       // Parse string
 637:Core/Src/main.c ****       sscanf(buffer_data, "%s%s", label_thres, str_thres);
 742              		.loc 1 637 7 is_stmt 1 view .LVU123
 743 0044 264C     		ldr	r4, .L38+36
 744 0046 2346     		mov	r3, r4
 745 0048 264A     		ldr	r2, .L38+40
 746 004a 2749     		ldr	r1, .L38+44
 747 004c 1E48     		ldr	r0, .L38+12
 748 004e FFF7FEFF 		bl	sscanf
 749              	.LVL55:
 638:Core/Src/main.c ****       // control Servo
 639:Core/Src/main.c ****       PC_threshold = atof(str_thres);
 750              		.loc 1 639 7 view .LVU124
 751              		.loc 1 639 22 is_stmt 0 view .LVU125
 752 0052 2046     		mov	r0, r4
 753 0054 FFF7FEFF 		bl	atof
 754              	.LVL56:
 755 0058 FFF7FEFF 		bl	__aeabi_d2f
 756              	.LVL57:
 757              		.loc 1 639 20 view .LVU126
 758 005c 234B     		ldr	r3, .L38+48
 759 005e 1860     		str	r0, [r3]	@ float
 640:Core/Src/main.c ****       strcat(str_buf, str_thres);
 760              		.loc 1 640 7 is_stmt 1 view .LVU127
 761 0060 2146     		mov	r1, r4
 762 0062 2846     		mov	r0, r5
 763 0064 FFF7FEFF 		bl	strcat
 764              	.LVL58:
 641:Core/Src/main.c ****       log_data("\nPC set Threshold: ");
 765              		.loc 1 641 7 view .LVU128
 766 0068 2148     		ldr	r0, .L38+52
 767 006a FFF7FEFF 		bl	log_data
 768              	.LVL59:
 642:Core/Src/main.c ****       log_data(str_thres);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 27


 769              		.loc 1 642 7 view .LVU129
 770 006e 2046     		mov	r0, r4
 771 0070 FFF7FEFF 		bl	log_data
 772              	.LVL60:
 773              	.L33:
 774              	.LBE7:
 643:Core/Src/main.c ****       // ST7735_WriteString(0, 3 * 10 * 4, str_buf, Font_11x18, ST7735_GREEN, ST7735_BLACK);
 644:Core/Src/main.c ****     }
 645:Core/Src/main.c ****     memset(buffer_data, '\0', sizeof(buffer_data));
 775              		.loc 1 645 5 view .LVU130
 776 0074 3222     		movs	r2, #50
 777 0076 0021     		movs	r1, #0
 778 0078 1348     		ldr	r0, .L38+12
 779 007a FFF7FEFF 		bl	memset
 780              	.LVL61:
 646:Core/Src/main.c ****     osSemaphoreRelease(DataSemHandle);
 781              		.loc 1 646 5 view .LVU131
 782 007e 1D4B     		ldr	r3, .L38+56
 783 0080 1868     		ldr	r0, [r3]
 784 0082 FFF7FEFF 		bl	osSemaphoreRelease
 785              	.LVL62:
 647:Core/Src/main.c ****     osDelay(1);
 786              		.loc 1 647 5 view .LVU132
 787 0086 0120     		movs	r0, #1
 788 0088 FFF7FEFF 		bl	osDelay
 789              	.LVL63:
 617:Core/Src/main.c ****   {
 790              		.loc 1 617 9 view .LVU133
 791              	.L34:
 617:Core/Src/main.c ****   {
 792              		.loc 1 617 3 view .LVU134
 619:Core/Src/main.c ****     log_data("task uart\n");
 793              		.loc 1 619 5 view .LVU135
 794 008c 4FF0FF31 		mov	r1, #-1
 795 0090 194B     		ldr	r3, .L38+60
 796 0092 1868     		ldr	r0, [r3]
 797 0094 FFF7FEFF 		bl	osSemaphoreWait
 798              	.LVL64:
 620:Core/Src/main.c ****     if (strncmp(buffer_data, "Rota", 4) == 0)
 799              		.loc 1 620 5 view .LVU136
 800 0098 1848     		ldr	r0, .L38+64
 801 009a FFF7FEFF 		bl	log_data
 802              	.LVL65:
 621:Core/Src/main.c ****     {
 803              		.loc 1 621 5 view .LVU137
 621:Core/Src/main.c ****     {
 804              		.loc 1 621 9 is_stmt 0 view .LVU138
 805 009e 0422     		movs	r2, #4
 806 00a0 1749     		ldr	r1, .L38+68
 807 00a2 0948     		ldr	r0, .L38+12
 808 00a4 FFF7FEFF 		bl	strncmp
 809              	.LVL66:
 621:Core/Src/main.c ****     {
 810              		.loc 1 621 8 view .LVU139
 811 00a8 0028     		cmp	r0, #0
 812 00aa ACD0     		beq	.L36
 813              	.L32:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 28


 632:Core/Src/main.c ****     {
 814              		.loc 1 632 5 is_stmt 1 view .LVU140
 632:Core/Src/main.c ****     {
 815              		.loc 1 632 9 is_stmt 0 view .LVU141
 816 00ac 0922     		movs	r2, #9
 817 00ae 1549     		ldr	r1, .L38+72
 818 00b0 0548     		ldr	r0, .L38+12
 819 00b2 FFF7FEFF 		bl	strncmp
 820              	.LVL67:
 632:Core/Src/main.c ****     {
 821              		.loc 1 632 8 view .LVU142
 822 00b6 0028     		cmp	r0, #0
 823 00b8 BBD0     		beq	.L37
 824 00ba DBE7     		b	.L33
 825              	.L39:
 826              		.align	2
 827              	.L38:
 828 00bc 14000000 		.word	.LC20
 829 00c0 00000000 		.word	.LANCHOR6
 830 00c4 28000000 		.word	.LC21
 831 00c8 00000000 		.word	.LANCHOR12
 832 00cc 00000000 		.word	.LANCHOR5
 833 00d0 34000000 		.word	.LC22
 834 00d4 40000000 		.word	.LC23
 835 00d8 5C000000 		.word	.LC25
 836 00dc 8C000000 		.word	.LC26
 837 00e0 00000000 		.word	.LANCHOR13
 838 00e4 00000000 		.word	.LANCHOR14
 839 00e8 70000000 		.word	.LC27
 840 00ec 00000000 		.word	.LANCHOR15
 841 00f0 78000000 		.word	.LC28
 842 00f4 00000000 		.word	.LANCHOR2
 843 00f8 00000000 		.word	.LANCHOR11
 844 00fc 00000000 		.word	.LC18
 845 0100 0C000000 		.word	.LC19
 846 0104 50000000 		.word	.LC24
 847              		.cfi_endproc
 848              	.LFE85:
 850              		.section	.rodata.HAL_UART_RxCpltCallback.str1.4,"aMS",%progbits,1
 851              		.align	2
 852              	.LC29:
 853 0000 6D616E75 		.ascii	"manual\000"
 853      616C00
 854 0007 00       		.align	2
 855              	.LC30:
 856 0008 6175746F 		.ascii	"auto\000"
 856      00
 857              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 858              		.align	1
 859              		.global	HAL_UART_RxCpltCallback
 860              		.syntax unified
 861              		.thumb
 862              		.thumb_func
 864              	HAL_UART_RxCpltCallback:
 865              	.LVL68:
 866              	.LFB74:
 118:Core/Src/main.c ****   if (huart == &huart3)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 29


 867              		.loc 1 118 1 is_stmt 1 view -0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 0
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 118:Core/Src/main.c ****   if (huart == &huart3)
 871              		.loc 1 118 1 is_stmt 0 view .LVU144
 872 0000 08B5     		push	{r3, lr}
 873              	.LCFI11:
 874              		.cfi_def_cfa_offset 8
 875              		.cfi_offset 3, -8
 876              		.cfi_offset 14, -4
 119:Core/Src/main.c ****   {
 877              		.loc 1 119 3 is_stmt 1 view .LVU145
 119:Core/Src/main.c ****   {
 878              		.loc 1 119 6 is_stmt 0 view .LVU146
 879 0002 174B     		ldr	r3, .L49
 880 0004 8342     		cmp	r3, r0
 881 0006 00D0     		beq	.L47
 882              	.LVL69:
 883              	.L40:
 143:Core/Src/main.c **** /* USER CODE END 0 */
 884              		.loc 1 143 1 view .LVU147
 885 0008 08BD     		pop	{r3, pc}
 886              	.LVL70:
 887              	.L47:
 121:Core/Src/main.c ****     {
 888              		.loc 1 121 5 is_stmt 1 view .LVU148
 121:Core/Src/main.c ****     {
 889              		.loc 1 121 17 is_stmt 0 view .LVU149
 890 000a 164B     		ldr	r3, .L49+4
 891 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 121:Core/Src/main.c ****     {
 892              		.loc 1 121 8 view .LVU150
 893 000e 0D2B     		cmp	r3, #13
 894 0010 0CD0     		beq	.L48
 137:Core/Src/main.c ****       Rx_index++;
 895              		.loc 1 137 7 is_stmt 1 view .LVU151
 137:Core/Src/main.c ****       Rx_index++;
 896              		.loc 1 137 18 is_stmt 0 view .LVU152
 897 0012 154A     		ldr	r2, .L49+8
 898 0014 1168     		ldr	r1, [r2]
 137:Core/Src/main.c ****       Rx_index++;
 899              		.loc 1 137 29 view .LVU153
 900 0016 1548     		ldr	r0, .L49+12
 901              	.LVL71:
 137:Core/Src/main.c ****       Rx_index++;
 902              		.loc 1 137 29 view .LVU154
 903 0018 4354     		strb	r3, [r0, r1]
 138:Core/Src/main.c ****       // log_data((char*)Rx_data);
 904              		.loc 1 138 7 is_stmt 1 view .LVU155
 138:Core/Src/main.c ****       // log_data((char*)Rx_data);
 905              		.loc 1 138 15 is_stmt 0 view .LVU156
 906 001a 1368     		ldr	r3, [r2]
 907 001c 0133     		adds	r3, r3, #1
 908 001e 1360     		str	r3, [r2]
 909              	.L45:
 141:Core/Src/main.c ****   }
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 30


 910              		.loc 1 141 5 is_stmt 1 view .LVU157
 911 0020 0122     		movs	r2, #1
 912 0022 1049     		ldr	r1, .L49+4
 913 0024 0E48     		ldr	r0, .L49
 914 0026 FFF7FEFF 		bl	HAL_UART_Receive_IT
 915              	.LVL72:
 143:Core/Src/main.c **** /* USER CODE END 0 */
 916              		.loc 1 143 1 is_stmt 0 view .LVU158
 917 002a EDE7     		b	.L40
 918              	.LVL73:
 919              	.L48:
 123:Core/Src/main.c ****       Rx_index = 0;
 920              		.loc 1 123 7 is_stmt 1 view .LVU159
 123:Core/Src/main.c ****       Rx_index = 0;
 921              		.loc 1 123 18 is_stmt 0 view .LVU160
 922 002c 0E4B     		ldr	r3, .L49+8
 923 002e 1968     		ldr	r1, [r3]
 123:Core/Src/main.c ****       Rx_index = 0;
 924              		.loc 1 123 29 view .LVU161
 925 0030 0E48     		ldr	r0, .L49+12
 926              	.LVL74:
 123:Core/Src/main.c ****       Rx_index = 0;
 927              		.loc 1 123 29 view .LVU162
 928 0032 0022     		movs	r2, #0
 929 0034 4254     		strb	r2, [r0, r1]
 124:Core/Src/main.c ****       if (strcmp(buffer_data, "manual") == 0)
 930              		.loc 1 124 7 is_stmt 1 view .LVU163
 124:Core/Src/main.c ****       if (strcmp(buffer_data, "manual") == 0)
 931              		.loc 1 124 16 is_stmt 0 view .LVU164
 932 0036 1A60     		str	r2, [r3]
 125:Core/Src/main.c ****       {
 933              		.loc 1 125 7 is_stmt 1 view .LVU165
 125:Core/Src/main.c ****       {
 934              		.loc 1 125 11 is_stmt 0 view .LVU166
 935 0038 0D49     		ldr	r1, .L49+16
 936 003a FFF7FEFF 		bl	strcmp
 937              	.LVL75:
 125:Core/Src/main.c ****       {
 938              		.loc 1 125 10 view .LVU167
 939 003e 10B9     		cbnz	r0, .L43
 127:Core/Src/main.c ****       }
 940              		.loc 1 127 9 is_stmt 1 view .LVU168
 127:Core/Src/main.c ****       }
 941              		.loc 1 127 14 is_stmt 0 view .LVU169
 942 0040 0C4B     		ldr	r3, .L49+20
 943 0042 0122     		movs	r2, #1
 944 0044 1A60     		str	r2, [r3]
 945              	.L43:
 129:Core/Src/main.c ****       {
 946              		.loc 1 129 7 is_stmt 1 view .LVU170
 129:Core/Src/main.c ****       {
 947              		.loc 1 129 11 is_stmt 0 view .LVU171
 948 0046 0C49     		ldr	r1, .L49+24
 949 0048 0848     		ldr	r0, .L49+12
 950 004a FFF7FEFF 		bl	strcmp
 951              	.LVL76:
 129:Core/Src/main.c ****       {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 31


 952              		.loc 1 129 10 view .LVU172
 953 004e 10B9     		cbnz	r0, .L44
 131:Core/Src/main.c ****       }
 954              		.loc 1 131 9 is_stmt 1 view .LVU173
 131:Core/Src/main.c ****       }
 955              		.loc 1 131 14 is_stmt 0 view .LVU174
 956 0050 084B     		ldr	r3, .L49+20
 957 0052 0022     		movs	r2, #0
 958 0054 1A60     		str	r2, [r3]
 959              	.L44:
 133:Core/Src/main.c ****     }
 960              		.loc 1 133 7 is_stmt 1 view .LVU175
 961 0056 094B     		ldr	r3, .L49+28
 962 0058 1868     		ldr	r0, [r3]
 963 005a FFF7FEFF 		bl	osSemaphoreRelease
 964              	.LVL77:
 965 005e DFE7     		b	.L45
 966              	.L50:
 967              		.align	2
 968              	.L49:
 969 0060 00000000 		.word	.LANCHOR0
 970 0064 00000000 		.word	.LANCHOR16
 971 0068 00000000 		.word	.LANCHOR17
 972 006c 00000000 		.word	.LANCHOR12
 973 0070 00000000 		.word	.LC29
 974 0074 00000000 		.word	.LANCHOR3
 975 0078 08000000 		.word	.LC30
 976 007c 00000000 		.word	.LANCHOR11
 977              		.cfi_endproc
 978              	.LFE74:
 980              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 981              		.align	1
 982              		.global	HAL_TIM_PeriodElapsedCallback
 983              		.syntax unified
 984              		.thumb
 985              		.thumb_func
 987              	HAL_TIM_PeriodElapsedCallback:
 988              	.LVL78:
 989              	.LFB86:
 648:Core/Src/main.c ****   }
 649:Core/Src/main.c ****   /* USER CODE END Task_Data */
 650:Core/Src/main.c **** }
 651:Core/Src/main.c **** 
 652:Core/Src/main.c **** /**
 653:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 654:Core/Src/main.c ****   * @note   This function is called  when TIM1 interrupt took place, inside
 655:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 656:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 657:Core/Src/main.c ****   * @param  htim : TIM handle
 658:Core/Src/main.c ****   * @retval None
 659:Core/Src/main.c ****   */
 660:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 661:Core/Src/main.c **** {
 990              		.loc 1 661 1 view -0
 991              		.cfi_startproc
 992              		@ args = 0, pretend = 0, frame = 0
 993              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 32


 994              		.loc 1 661 1 is_stmt 0 view .LVU177
 995 0000 08B5     		push	{r3, lr}
 996              	.LCFI12:
 997              		.cfi_def_cfa_offset 8
 998              		.cfi_offset 3, -8
 999              		.cfi_offset 14, -4
 662:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 663:Core/Src/main.c **** 
 664:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 665:Core/Src/main.c ****   if (htim->Instance == TIM1) {
 1000              		.loc 1 665 3 is_stmt 1 view .LVU178
 1001              		.loc 1 665 11 is_stmt 0 view .LVU179
 1002 0002 0268     		ldr	r2, [r0]
 1003              		.loc 1 665 6 view .LVU180
 1004 0004 034B     		ldr	r3, .L55
 1005 0006 9A42     		cmp	r2, r3
 1006 0008 00D0     		beq	.L54
 1007              	.LVL79:
 1008              	.L51:
 666:Core/Src/main.c ****     HAL_IncTick();
 667:Core/Src/main.c ****   }
 668:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 669:Core/Src/main.c **** 
 670:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 671:Core/Src/main.c **** }
 1009              		.loc 1 671 1 view .LVU181
 1010 000a 08BD     		pop	{r3, pc}
 1011              	.LVL80:
 1012              	.L54:
 666:Core/Src/main.c ****     HAL_IncTick();
 1013              		.loc 1 666 5 is_stmt 1 view .LVU182
 1014 000c FFF7FEFF 		bl	HAL_IncTick
 1015              	.LVL81:
 1016              		.loc 1 671 1 is_stmt 0 view .LVU183
 1017 0010 FBE7     		b	.L51
 1018              	.L56:
 1019 0012 00BF     		.align	2
 1020              	.L55:
 1021 0014 002C0140 		.word	1073818624
 1022              		.cfi_endproc
 1023              	.LFE86:
 1025              		.section	.text.Error_Handler,"ax",%progbits
 1026              		.align	1
 1027              		.global	Error_Handler
 1028              		.syntax unified
 1029              		.thumb
 1030              		.thumb_func
 1032              	Error_Handler:
 1033              	.LFB87:
 672:Core/Src/main.c **** 
 673:Core/Src/main.c **** /**
 674:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 675:Core/Src/main.c ****   * @retval None
 676:Core/Src/main.c ****   */
 677:Core/Src/main.c **** void Error_Handler(void)
 678:Core/Src/main.c **** {
 1034              		.loc 1 678 1 is_stmt 1 view -0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 33


 1035              		.cfi_startproc
 1036              		@ Volatile: function does not return.
 1037              		@ args = 0, pretend = 0, frame = 0
 1038              		@ frame_needed = 0, uses_anonymous_args = 0
 1039              		@ link register save eliminated.
 679:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 680:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 681:Core/Src/main.c ****   __disable_irq();
 1040              		.loc 1 681 3 view .LVU185
 1041              	.LBB8:
 1042              	.LBI8:
 1043              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 34


  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 35


 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1044              		.loc 2 140 27 view .LVU186
 1045              	.LBB9:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1046              		.loc 2 142 3 view .LVU187
 1047              		.syntax unified
 1048              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1049 0000 72B6     		cpsid i
 1050              	@ 0 "" 2
 1051              		.thumb
 1052              		.syntax unified
 1053              	.L58:
 1054              	.LBE9:
 1055              	.LBE8:
 682:Core/Src/main.c ****   while (1)
 1056              		.loc 1 682 3 discriminator 1 view .LVU188
 683:Core/Src/main.c ****   {
 684:Core/Src/main.c ****   }
 1057              		.loc 1 684 3 discriminator 1 view .LVU189
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 36


 682:Core/Src/main.c ****   while (1)
 1058              		.loc 1 682 9 discriminator 1 view .LVU190
 1059 0002 FEE7     		b	.L58
 1060              		.cfi_endproc
 1061              	.LFE87:
 1063              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 1064              		.align	1
 1065              		.syntax unified
 1066              		.thumb
 1067              		.thumb_func
 1069              	MX_USART3_UART_Init:
 1070              	.LFB80:
 438:Core/Src/main.c **** 
 1071              		.loc 1 438 1 view -0
 1072              		.cfi_startproc
 1073              		@ args = 0, pretend = 0, frame = 0
 1074              		@ frame_needed = 0, uses_anonymous_args = 0
 1075 0000 08B5     		push	{r3, lr}
 1076              	.LCFI13:
 1077              		.cfi_def_cfa_offset 8
 1078              		.cfi_offset 3, -8
 1079              		.cfi_offset 14, -4
 447:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 1080              		.loc 1 447 3 view .LVU192
 447:Core/Src/main.c ****   huart3.Init.BaudRate = 115200;
 1081              		.loc 1 447 19 is_stmt 0 view .LVU193
 1082 0002 0A48     		ldr	r0, .L63
 1083 0004 0A4B     		ldr	r3, .L63+4
 1084 0006 0360     		str	r3, [r0]
 448:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1085              		.loc 1 448 3 is_stmt 1 view .LVU194
 448:Core/Src/main.c ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 1086              		.loc 1 448 24 is_stmt 0 view .LVU195
 1087 0008 4FF4E133 		mov	r3, #115200
 1088 000c 4360     		str	r3, [r0, #4]
 449:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1089              		.loc 1 449 3 is_stmt 1 view .LVU196
 449:Core/Src/main.c ****   huart3.Init.StopBits = UART_STOPBITS_1;
 1090              		.loc 1 449 26 is_stmt 0 view .LVU197
 1091 000e 0023     		movs	r3, #0
 1092 0010 8360     		str	r3, [r0, #8]
 450:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 1093              		.loc 1 450 3 is_stmt 1 view .LVU198
 450:Core/Src/main.c ****   huart3.Init.Parity = UART_PARITY_NONE;
 1094              		.loc 1 450 24 is_stmt 0 view .LVU199
 1095 0012 C360     		str	r3, [r0, #12]
 451:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1096              		.loc 1 451 3 is_stmt 1 view .LVU200
 451:Core/Src/main.c ****   huart3.Init.Mode = UART_MODE_TX_RX;
 1097              		.loc 1 451 22 is_stmt 0 view .LVU201
 1098 0014 0361     		str	r3, [r0, #16]
 452:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1099              		.loc 1 452 3 is_stmt 1 view .LVU202
 452:Core/Src/main.c ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1100              		.loc 1 452 20 is_stmt 0 view .LVU203
 1101 0016 0C22     		movs	r2, #12
 1102 0018 4261     		str	r2, [r0, #20]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 37


 453:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1103              		.loc 1 453 3 is_stmt 1 view .LVU204
 453:Core/Src/main.c ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 1104              		.loc 1 453 25 is_stmt 0 view .LVU205
 1105 001a 8361     		str	r3, [r0, #24]
 454:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1106              		.loc 1 454 3 is_stmt 1 view .LVU206
 454:Core/Src/main.c ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 1107              		.loc 1 454 28 is_stmt 0 view .LVU207
 1108 001c C361     		str	r3, [r0, #28]
 455:Core/Src/main.c ****   {
 1109              		.loc 1 455 3 is_stmt 1 view .LVU208
 455:Core/Src/main.c ****   {
 1110              		.loc 1 455 7 is_stmt 0 view .LVU209
 1111 001e FFF7FEFF 		bl	HAL_UART_Init
 1112              	.LVL82:
 455:Core/Src/main.c ****   {
 1113              		.loc 1 455 6 view .LVU210
 1114 0022 00B9     		cbnz	r0, .L62
 463:Core/Src/main.c **** 
 1115              		.loc 1 463 1 view .LVU211
 1116 0024 08BD     		pop	{r3, pc}
 1117              	.L62:
 457:Core/Src/main.c ****   }
 1118              		.loc 1 457 5 is_stmt 1 view .LVU212
 1119 0026 FFF7FEFF 		bl	Error_Handler
 1120              	.LVL83:
 1121              	.L64:
 1122 002a 00BF     		.align	2
 1123              	.L63:
 1124 002c 00000000 		.word	.LANCHOR0
 1125 0030 00480040 		.word	1073760256
 1126              		.cfi_endproc
 1127              	.LFE80:
 1129              		.section	.text.MX_SPI2_Init,"ax",%progbits
 1130              		.align	1
 1131              		.syntax unified
 1132              		.thumb
 1133              		.thumb_func
 1135              	MX_SPI2_Init:
 1136              	.LFB77:
 296:Core/Src/main.c **** 
 1137              		.loc 1 296 1 view -0
 1138              		.cfi_startproc
 1139              		@ args = 0, pretend = 0, frame = 0
 1140              		@ frame_needed = 0, uses_anonymous_args = 0
 1141 0000 08B5     		push	{r3, lr}
 1142              	.LCFI14:
 1143              		.cfi_def_cfa_offset 8
 1144              		.cfi_offset 3, -8
 1145              		.cfi_offset 14, -4
 306:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 1146              		.loc 1 306 3 view .LVU214
 306:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 1147              		.loc 1 306 18 is_stmt 0 view .LVU215
 1148 0002 0E48     		ldr	r0, .L69
 1149 0004 0E4B     		ldr	r3, .L69+4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 38


 1150 0006 0360     		str	r3, [r0]
 307:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_1LINE;
 1151              		.loc 1 307 3 is_stmt 1 view .LVU216
 307:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_1LINE;
 1152              		.loc 1 307 19 is_stmt 0 view .LVU217
 1153 0008 4FF48273 		mov	r3, #260
 1154 000c 4360     		str	r3, [r0, #4]
 308:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 1155              		.loc 1 308 3 is_stmt 1 view .LVU218
 308:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 1156              		.loc 1 308 24 is_stmt 0 view .LVU219
 1157 000e 4FF40043 		mov	r3, #32768
 1158 0012 8360     		str	r3, [r0, #8]
 309:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 1159              		.loc 1 309 3 is_stmt 1 view .LVU220
 309:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 1160              		.loc 1 309 23 is_stmt 0 view .LVU221
 1161 0014 0023     		movs	r3, #0
 1162 0016 C360     		str	r3, [r0, #12]
 310:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 1163              		.loc 1 310 3 is_stmt 1 view .LVU222
 310:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 1164              		.loc 1 310 26 is_stmt 0 view .LVU223
 1165 0018 0361     		str	r3, [r0, #16]
 311:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 1166              		.loc 1 311 3 is_stmt 1 view .LVU224
 311:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 1167              		.loc 1 311 23 is_stmt 0 view .LVU225
 1168 001a 4361     		str	r3, [r0, #20]
 312:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1169              		.loc 1 312 3 is_stmt 1 view .LVU226
 312:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 1170              		.loc 1 312 18 is_stmt 0 view .LVU227
 1171 001c 4FF40072 		mov	r2, #512
 1172 0020 8261     		str	r2, [r0, #24]
 313:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1173              		.loc 1 313 3 is_stmt 1 view .LVU228
 313:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 1174              		.loc 1 313 32 is_stmt 0 view .LVU229
 1175 0022 C361     		str	r3, [r0, #28]
 314:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 1176              		.loc 1 314 3 is_stmt 1 view .LVU230
 314:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 1177              		.loc 1 314 23 is_stmt 0 view .LVU231
 1178 0024 0362     		str	r3, [r0, #32]
 315:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1179              		.loc 1 315 3 is_stmt 1 view .LVU232
 315:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 1180              		.loc 1 315 21 is_stmt 0 view .LVU233
 1181 0026 4362     		str	r3, [r0, #36]
 316:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 1182              		.loc 1 316 3 is_stmt 1 view .LVU234
 316:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 10;
 1183              		.loc 1 316 29 is_stmt 0 view .LVU235
 1184 0028 8362     		str	r3, [r0, #40]
 317:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 1185              		.loc 1 317 3 is_stmt 1 view .LVU236
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 39


 317:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 1186              		.loc 1 317 28 is_stmt 0 view .LVU237
 1187 002a 0A23     		movs	r3, #10
 1188 002c C362     		str	r3, [r0, #44]
 318:Core/Src/main.c ****   {
 1189              		.loc 1 318 3 is_stmt 1 view .LVU238
 318:Core/Src/main.c ****   {
 1190              		.loc 1 318 7 is_stmt 0 view .LVU239
 1191 002e FFF7FEFF 		bl	HAL_SPI_Init
 1192              	.LVL84:
 318:Core/Src/main.c ****   {
 1193              		.loc 1 318 6 view .LVU240
 1194 0032 00B9     		cbnz	r0, .L68
 326:Core/Src/main.c **** 
 1195              		.loc 1 326 1 view .LVU241
 1196 0034 08BD     		pop	{r3, pc}
 1197              	.L68:
 320:Core/Src/main.c ****   }
 1198              		.loc 1 320 5 is_stmt 1 view .LVU242
 1199 0036 FFF7FEFF 		bl	Error_Handler
 1200              	.LVL85:
 1201              	.L70:
 1202 003a 00BF     		.align	2
 1203              	.L69:
 1204 003c 00000000 		.word	.LANCHOR18
 1205 0040 00380040 		.word	1073756160
 1206              		.cfi_endproc
 1207              	.LFE77:
 1209              		.section	.text.MX_TIM2_Init,"ax",%progbits
 1210              		.align	1
 1211              		.syntax unified
 1212              		.thumb
 1213              		.thumb_func
 1215              	MX_TIM2_Init:
 1216              	.LFB78:
 334:Core/Src/main.c **** 
 1217              		.loc 1 334 1 view -0
 1218              		.cfi_startproc
 1219              		@ args = 0, pretend = 0, frame = 56
 1220              		@ frame_needed = 0, uses_anonymous_args = 0
 1221 0000 00B5     		push	{lr}
 1222              	.LCFI15:
 1223              		.cfi_def_cfa_offset 4
 1224              		.cfi_offset 14, -4
 1225 0002 8FB0     		sub	sp, sp, #60
 1226              	.LCFI16:
 1227              		.cfi_def_cfa_offset 64
 340:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1228              		.loc 1 340 3 view .LVU244
 340:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1229              		.loc 1 340 26 is_stmt 0 view .LVU245
 1230 0004 0023     		movs	r3, #0
 1231 0006 0A93     		str	r3, [sp, #40]
 1232 0008 0B93     		str	r3, [sp, #44]
 1233 000a 0C93     		str	r3, [sp, #48]
 1234 000c 0D93     		str	r3, [sp, #52]
 341:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 40


 1235              		.loc 1 341 3 is_stmt 1 view .LVU246
 341:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1236              		.loc 1 341 27 is_stmt 0 view .LVU247
 1237 000e 0893     		str	r3, [sp, #32]
 1238 0010 0993     		str	r3, [sp, #36]
 342:Core/Src/main.c **** 
 1239              		.loc 1 342 3 is_stmt 1 view .LVU248
 342:Core/Src/main.c **** 
 1240              		.loc 1 342 22 is_stmt 0 view .LVU249
 1241 0012 0193     		str	r3, [sp, #4]
 1242 0014 0293     		str	r3, [sp, #8]
 1243 0016 0393     		str	r3, [sp, #12]
 1244 0018 0493     		str	r3, [sp, #16]
 1245 001a 0593     		str	r3, [sp, #20]
 1246 001c 0693     		str	r3, [sp, #24]
 1247 001e 0793     		str	r3, [sp, #28]
 347:Core/Src/main.c ****   htim2.Init.Prescaler = 1444-1;
 1248              		.loc 1 347 3 is_stmt 1 view .LVU250
 347:Core/Src/main.c ****   htim2.Init.Prescaler = 1444-1;
 1249              		.loc 1 347 18 is_stmt 0 view .LVU251
 1250 0020 1F48     		ldr	r0, .L83
 1251 0022 4FF08042 		mov	r2, #1073741824
 1252 0026 0260     		str	r2, [r0]
 348:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1253              		.loc 1 348 3 is_stmt 1 view .LVU252
 348:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1254              		.loc 1 348 24 is_stmt 0 view .LVU253
 1255 0028 40F2A352 		movw	r2, #1443
 1256 002c 4260     		str	r2, [r0, #4]
 349:Core/Src/main.c ****   htim2.Init.Period = 1000-1;
 1257              		.loc 1 349 3 is_stmt 1 view .LVU254
 349:Core/Src/main.c ****   htim2.Init.Period = 1000-1;
 1258              		.loc 1 349 26 is_stmt 0 view .LVU255
 1259 002e 8360     		str	r3, [r0, #8]
 350:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1260              		.loc 1 350 3 is_stmt 1 view .LVU256
 350:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1261              		.loc 1 350 21 is_stmt 0 view .LVU257
 1262 0030 40F2E732 		movw	r2, #999
 1263 0034 C260     		str	r2, [r0, #12]
 351:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1264              		.loc 1 351 3 is_stmt 1 view .LVU258
 351:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1265              		.loc 1 351 28 is_stmt 0 view .LVU259
 1266 0036 0361     		str	r3, [r0, #16]
 352:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1267              		.loc 1 352 3 is_stmt 1 view .LVU260
 352:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1268              		.loc 1 352 32 is_stmt 0 view .LVU261
 1269 0038 8361     		str	r3, [r0, #24]
 353:Core/Src/main.c ****   {
 1270              		.loc 1 353 3 is_stmt 1 view .LVU262
 353:Core/Src/main.c ****   {
 1271              		.loc 1 353 7 is_stmt 0 view .LVU263
 1272 003a FFF7FEFF 		bl	HAL_TIM_Base_Init
 1273              	.LVL86:
 353:Core/Src/main.c ****   {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 41


 1274              		.loc 1 353 6 view .LVU264
 1275 003e 20BB     		cbnz	r0, .L78
 357:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1276              		.loc 1 357 3 is_stmt 1 view .LVU265
 357:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 1277              		.loc 1 357 34 is_stmt 0 view .LVU266
 1278 0040 4FF48053 		mov	r3, #4096
 1279 0044 0A93     		str	r3, [sp, #40]
 358:Core/Src/main.c ****   {
 1280              		.loc 1 358 3 is_stmt 1 view .LVU267
 358:Core/Src/main.c ****   {
 1281              		.loc 1 358 7 is_stmt 0 view .LVU268
 1282 0046 0AA9     		add	r1, sp, #40
 1283 0048 1548     		ldr	r0, .L83
 1284 004a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1285              	.LVL87:
 358:Core/Src/main.c ****   {
 1286              		.loc 1 358 6 view .LVU269
 1287 004e F0B9     		cbnz	r0, .L79
 362:Core/Src/main.c ****   {
 1288              		.loc 1 362 3 is_stmt 1 view .LVU270
 362:Core/Src/main.c ****   {
 1289              		.loc 1 362 7 is_stmt 0 view .LVU271
 1290 0050 1348     		ldr	r0, .L83
 1291 0052 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1292              	.LVL88:
 362:Core/Src/main.c ****   {
 1293              		.loc 1 362 6 view .LVU272
 1294 0056 E0B9     		cbnz	r0, .L80
 366:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1295              		.loc 1 366 3 is_stmt 1 view .LVU273
 366:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1296              		.loc 1 366 37 is_stmt 0 view .LVU274
 1297 0058 0023     		movs	r3, #0
 1298 005a 0893     		str	r3, [sp, #32]
 367:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1299              		.loc 1 367 3 is_stmt 1 view .LVU275
 367:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 1300              		.loc 1 367 33 is_stmt 0 view .LVU276
 1301 005c 0993     		str	r3, [sp, #36]
 368:Core/Src/main.c ****   {
 1302              		.loc 1 368 3 is_stmt 1 view .LVU277
 368:Core/Src/main.c ****   {
 1303              		.loc 1 368 7 is_stmt 0 view .LVU278
 1304 005e 08A9     		add	r1, sp, #32
 1305 0060 0F48     		ldr	r0, .L83
 1306 0062 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1307              	.LVL89:
 368:Core/Src/main.c ****   {
 1308              		.loc 1 368 6 view .LVU279
 1309 0066 B0B9     		cbnz	r0, .L81
 372:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1310              		.loc 1 372 3 is_stmt 1 view .LVU280
 372:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1311              		.loc 1 372 20 is_stmt 0 view .LVU281
 1312 0068 6023     		movs	r3, #96
 1313 006a 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 42


 373:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1314              		.loc 1 373 3 is_stmt 1 view .LVU282
 373:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1315              		.loc 1 373 19 is_stmt 0 view .LVU283
 1316 006c 0022     		movs	r2, #0
 1317 006e 0292     		str	r2, [sp, #8]
 374:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1318              		.loc 1 374 3 is_stmt 1 view .LVU284
 374:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1319              		.loc 1 374 24 is_stmt 0 view .LVU285
 1320 0070 0392     		str	r2, [sp, #12]
 375:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1321              		.loc 1 375 3 is_stmt 1 view .LVU286
 375:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1322              		.loc 1 375 24 is_stmt 0 view .LVU287
 1323 0072 0592     		str	r2, [sp, #20]
 376:Core/Src/main.c ****   {
 1324              		.loc 1 376 3 is_stmt 1 view .LVU288
 376:Core/Src/main.c ****   {
 1325              		.loc 1 376 7 is_stmt 0 view .LVU289
 1326 0074 01A9     		add	r1, sp, #4
 1327 0076 0A48     		ldr	r0, .L83
 1328 0078 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1329              	.LVL90:
 376:Core/Src/main.c ****   {
 1330              		.loc 1 376 6 view .LVU290
 1331 007c 68B9     		cbnz	r0, .L82
 383:Core/Src/main.c **** 
 1332              		.loc 1 383 3 is_stmt 1 view .LVU291
 1333 007e 0848     		ldr	r0, .L83
 1334 0080 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1335              	.LVL91:
 385:Core/Src/main.c **** 
 1336              		.loc 1 385 1 is_stmt 0 view .LVU292
 1337 0084 0FB0     		add	sp, sp, #60
 1338              	.LCFI17:
 1339              		.cfi_remember_state
 1340              		.cfi_def_cfa_offset 4
 1341              		@ sp needed
 1342 0086 5DF804FB 		ldr	pc, [sp], #4
 1343              	.L78:
 1344              	.LCFI18:
 1345              		.cfi_restore_state
 355:Core/Src/main.c ****   }
 1346              		.loc 1 355 5 is_stmt 1 view .LVU293
 1347 008a FFF7FEFF 		bl	Error_Handler
 1348              	.LVL92:
 1349              	.L79:
 360:Core/Src/main.c ****   }
 1350              		.loc 1 360 5 view .LVU294
 1351 008e FFF7FEFF 		bl	Error_Handler
 1352              	.LVL93:
 1353              	.L80:
 364:Core/Src/main.c ****   }
 1354              		.loc 1 364 5 view .LVU295
 1355 0092 FFF7FEFF 		bl	Error_Handler
 1356              	.LVL94:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 43


 1357              	.L81:
 370:Core/Src/main.c ****   }
 1358              		.loc 1 370 5 view .LVU296
 1359 0096 FFF7FEFF 		bl	Error_Handler
 1360              	.LVL95:
 1361              	.L82:
 378:Core/Src/main.c ****   }
 1362              		.loc 1 378 5 view .LVU297
 1363 009a FFF7FEFF 		bl	Error_Handler
 1364              	.LVL96:
 1365              	.L84:
 1366 009e 00BF     		.align	2
 1367              	.L83:
 1368 00a0 00000000 		.word	.LANCHOR19
 1369              		.cfi_endproc
 1370              	.LFE78:
 1372              		.section	.text.MX_TIM3_Init,"ax",%progbits
 1373              		.align	1
 1374              		.syntax unified
 1375              		.thumb
 1376              		.thumb_func
 1378              	MX_TIM3_Init:
 1379              	.LFB79:
 393:Core/Src/main.c **** 
 1380              		.loc 1 393 1 view -0
 1381              		.cfi_startproc
 1382              		@ args = 0, pretend = 0, frame = 24
 1383              		@ frame_needed = 0, uses_anonymous_args = 0
 1384 0000 00B5     		push	{lr}
 1385              	.LCFI19:
 1386              		.cfi_def_cfa_offset 4
 1387              		.cfi_offset 14, -4
 1388 0002 87B0     		sub	sp, sp, #28
 1389              	.LCFI20:
 1390              		.cfi_def_cfa_offset 32
 399:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1391              		.loc 1 399 3 view .LVU299
 399:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1392              		.loc 1 399 26 is_stmt 0 view .LVU300
 1393 0004 0023     		movs	r3, #0
 1394 0006 0293     		str	r3, [sp, #8]
 1395 0008 0393     		str	r3, [sp, #12]
 1396 000a 0493     		str	r3, [sp, #16]
 1397 000c 0593     		str	r3, [sp, #20]
 400:Core/Src/main.c **** 
 1398              		.loc 1 400 3 is_stmt 1 view .LVU301
 400:Core/Src/main.c **** 
 1399              		.loc 1 400 27 is_stmt 0 view .LVU302
 1400 000e 0093     		str	r3, [sp]
 1401 0010 0193     		str	r3, [sp, #4]
 405:Core/Src/main.c ****   htim3.Init.Prescaler = 72-1;
 1402              		.loc 1 405 3 is_stmt 1 view .LVU303
 405:Core/Src/main.c ****   htim3.Init.Prescaler = 72-1;
 1403              		.loc 1 405 18 is_stmt 0 view .LVU304
 1404 0012 1348     		ldr	r0, .L93
 1405 0014 134A     		ldr	r2, .L93+4
 1406 0016 0260     		str	r2, [r0]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 44


 406:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1407              		.loc 1 406 3 is_stmt 1 view .LVU305
 406:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1408              		.loc 1 406 24 is_stmt 0 view .LVU306
 1409 0018 4722     		movs	r2, #71
 1410 001a 4260     		str	r2, [r0, #4]
 407:Core/Src/main.c ****   htim3.Init.Period = 65535;
 1411              		.loc 1 407 3 is_stmt 1 view .LVU307
 407:Core/Src/main.c ****   htim3.Init.Period = 65535;
 1412              		.loc 1 407 26 is_stmt 0 view .LVU308
 1413 001c 8360     		str	r3, [r0, #8]
 408:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1414              		.loc 1 408 3 is_stmt 1 view .LVU309
 408:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1415              		.loc 1 408 21 is_stmt 0 view .LVU310
 1416 001e 4FF6FF72 		movw	r2, #65535
 1417 0022 C260     		str	r2, [r0, #12]
 409:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1418              		.loc 1 409 3 is_stmt 1 view .LVU311
 409:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1419              		.loc 1 409 28 is_stmt 0 view .LVU312
 1420 0024 0361     		str	r3, [r0, #16]
 410:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1421              		.loc 1 410 3 is_stmt 1 view .LVU313
 410:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1422              		.loc 1 410 32 is_stmt 0 view .LVU314
 1423 0026 8361     		str	r3, [r0, #24]
 411:Core/Src/main.c ****   {
 1424              		.loc 1 411 3 is_stmt 1 view .LVU315
 411:Core/Src/main.c ****   {
 1425              		.loc 1 411 7 is_stmt 0 view .LVU316
 1426 0028 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1427              	.LVL97:
 411:Core/Src/main.c ****   {
 1428              		.loc 1 411 6 view .LVU317
 1429 002c 90B9     		cbnz	r0, .L90
 415:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1430              		.loc 1 415 3 is_stmt 1 view .LVU318
 415:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1431              		.loc 1 415 34 is_stmt 0 view .LVU319
 1432 002e 4FF48053 		mov	r3, #4096
 1433 0032 0293     		str	r3, [sp, #8]
 416:Core/Src/main.c ****   {
 1434              		.loc 1 416 3 is_stmt 1 view .LVU320
 416:Core/Src/main.c ****   {
 1435              		.loc 1 416 7 is_stmt 0 view .LVU321
 1436 0034 02A9     		add	r1, sp, #8
 1437 0036 0A48     		ldr	r0, .L93
 1438 0038 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1439              	.LVL98:
 416:Core/Src/main.c ****   {
 1440              		.loc 1 416 6 view .LVU322
 1441 003c 60B9     		cbnz	r0, .L91
 420:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1442              		.loc 1 420 3 is_stmt 1 view .LVU323
 420:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1443              		.loc 1 420 37 is_stmt 0 view .LVU324
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 45


 1444 003e 0023     		movs	r3, #0
 1445 0040 0093     		str	r3, [sp]
 421:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1446              		.loc 1 421 3 is_stmt 1 view .LVU325
 421:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1447              		.loc 1 421 33 is_stmt 0 view .LVU326
 1448 0042 0193     		str	r3, [sp, #4]
 422:Core/Src/main.c ****   {
 1449              		.loc 1 422 3 is_stmt 1 view .LVU327
 422:Core/Src/main.c ****   {
 1450              		.loc 1 422 7 is_stmt 0 view .LVU328
 1451 0044 6946     		mov	r1, sp
 1452 0046 0648     		ldr	r0, .L93
 1453 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1454              	.LVL99:
 422:Core/Src/main.c ****   {
 1455              		.loc 1 422 6 view .LVU329
 1456 004c 30B9     		cbnz	r0, .L92
 430:Core/Src/main.c **** 
 1457              		.loc 1 430 1 view .LVU330
 1458 004e 07B0     		add	sp, sp, #28
 1459              	.LCFI21:
 1460              		.cfi_remember_state
 1461              		.cfi_def_cfa_offset 4
 1462              		@ sp needed
 1463 0050 5DF804FB 		ldr	pc, [sp], #4
 1464              	.L90:
 1465              	.LCFI22:
 1466              		.cfi_restore_state
 413:Core/Src/main.c ****   }
 1467              		.loc 1 413 5 is_stmt 1 view .LVU331
 1468 0054 FFF7FEFF 		bl	Error_Handler
 1469              	.LVL100:
 1470              	.L91:
 418:Core/Src/main.c ****   }
 1471              		.loc 1 418 5 view .LVU332
 1472 0058 FFF7FEFF 		bl	Error_Handler
 1473              	.LVL101:
 1474              	.L92:
 424:Core/Src/main.c ****   }
 1475              		.loc 1 424 5 view .LVU333
 1476 005c FFF7FEFF 		bl	Error_Handler
 1477              	.LVL102:
 1478              	.L94:
 1479              		.align	2
 1480              	.L93:
 1481 0060 00000000 		.word	.LANCHOR20
 1482 0064 00040040 		.word	1073742848
 1483              		.cfi_endproc
 1484              	.LFE79:
 1486              		.section	.text.SystemClock_Config,"ax",%progbits
 1487              		.align	1
 1488              		.global	SystemClock_Config
 1489              		.syntax unified
 1490              		.thumb
 1491              		.thumb_func
 1493              	SystemClock_Config:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 46


 1494              	.LFB76:
 256:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1495              		.loc 1 256 1 view -0
 1496              		.cfi_startproc
 1497              		@ args = 0, pretend = 0, frame = 64
 1498              		@ frame_needed = 0, uses_anonymous_args = 0
 1499 0000 00B5     		push	{lr}
 1500              	.LCFI23:
 1501              		.cfi_def_cfa_offset 4
 1502              		.cfi_offset 14, -4
 1503 0002 91B0     		sub	sp, sp, #68
 1504              	.LCFI24:
 1505              		.cfi_def_cfa_offset 72
 257:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1506              		.loc 1 257 3 view .LVU335
 257:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1507              		.loc 1 257 22 is_stmt 0 view .LVU336
 1508 0004 2822     		movs	r2, #40
 1509 0006 0021     		movs	r1, #0
 1510 0008 06A8     		add	r0, sp, #24
 1511 000a FFF7FEFF 		bl	memset
 1512              	.LVL103:
 258:Core/Src/main.c **** 
 1513              		.loc 1 258 3 is_stmt 1 view .LVU337
 258:Core/Src/main.c **** 
 1514              		.loc 1 258 22 is_stmt 0 view .LVU338
 1515 000e 0023     		movs	r3, #0
 1516 0010 0193     		str	r3, [sp, #4]
 1517 0012 0293     		str	r3, [sp, #8]
 1518 0014 0393     		str	r3, [sp, #12]
 1519 0016 0493     		str	r3, [sp, #16]
 1520 0018 0593     		str	r3, [sp, #20]
 263:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1521              		.loc 1 263 3 is_stmt 1 view .LVU339
 263:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1522              		.loc 1 263 36 is_stmt 0 view .LVU340
 1523 001a 0122     		movs	r2, #1
 1524 001c 0692     		str	r2, [sp, #24]
 264:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1525              		.loc 1 264 3 is_stmt 1 view .LVU341
 264:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 1526              		.loc 1 264 30 is_stmt 0 view .LVU342
 1527 001e 4FF48033 		mov	r3, #65536
 1528 0022 0793     		str	r3, [sp, #28]
 265:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1529              		.loc 1 265 3 is_stmt 1 view .LVU343
 266:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1530              		.loc 1 266 3 view .LVU344
 266:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1531              		.loc 1 266 30 is_stmt 0 view .LVU345
 1532 0024 0A92     		str	r2, [sp, #40]
 267:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1533              		.loc 1 267 3 is_stmt 1 view .LVU346
 267:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1534              		.loc 1 267 34 is_stmt 0 view .LVU347
 1535 0026 0222     		movs	r2, #2
 1536 0028 0D92     		str	r2, [sp, #52]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 47


 268:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1537              		.loc 1 268 3 is_stmt 1 view .LVU348
 268:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 1538              		.loc 1 268 35 is_stmt 0 view .LVU349
 1539 002a 0E93     		str	r3, [sp, #56]
 269:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1540              		.loc 1 269 3 is_stmt 1 view .LVU350
 269:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1541              		.loc 1 269 32 is_stmt 0 view .LVU351
 1542 002c 4FF4E013 		mov	r3, #1835008
 1543 0030 0F93     		str	r3, [sp, #60]
 270:Core/Src/main.c ****   {
 1544              		.loc 1 270 3 is_stmt 1 view .LVU352
 270:Core/Src/main.c ****   {
 1545              		.loc 1 270 7 is_stmt 0 view .LVU353
 1546 0032 06A8     		add	r0, sp, #24
 1547 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1548              	.LVL104:
 270:Core/Src/main.c ****   {
 1549              		.loc 1 270 6 view .LVU354
 1550 0038 80B9     		cbnz	r0, .L99
 277:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1551              		.loc 1 277 3 is_stmt 1 view .LVU355
 277:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1552              		.loc 1 277 31 is_stmt 0 view .LVU356
 1553 003a 0F23     		movs	r3, #15
 1554 003c 0193     		str	r3, [sp, #4]
 279:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1555              		.loc 1 279 3 is_stmt 1 view .LVU357
 279:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1556              		.loc 1 279 34 is_stmt 0 view .LVU358
 1557 003e 0221     		movs	r1, #2
 1558 0040 0291     		str	r1, [sp, #8]
 280:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1559              		.loc 1 280 3 is_stmt 1 view .LVU359
 280:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 1560              		.loc 1 280 35 is_stmt 0 view .LVU360
 1561 0042 0023     		movs	r3, #0
 1562 0044 0393     		str	r3, [sp, #12]
 281:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1563              		.loc 1 281 3 is_stmt 1 view .LVU361
 281:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1564              		.loc 1 281 36 is_stmt 0 view .LVU362
 1565 0046 4FF48062 		mov	r2, #1024
 1566 004a 0492     		str	r2, [sp, #16]
 282:Core/Src/main.c **** 
 1567              		.loc 1 282 3 is_stmt 1 view .LVU363
 282:Core/Src/main.c **** 
 1568              		.loc 1 282 36 is_stmt 0 view .LVU364
 1569 004c 0593     		str	r3, [sp, #20]
 284:Core/Src/main.c ****   {
 1570              		.loc 1 284 3 is_stmt 1 view .LVU365
 284:Core/Src/main.c ****   {
 1571              		.loc 1 284 7 is_stmt 0 view .LVU366
 1572 004e 01A8     		add	r0, sp, #4
 1573 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1574              	.LVL105:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 48


 284:Core/Src/main.c ****   {
 1575              		.loc 1 284 6 view .LVU367
 1576 0054 20B9     		cbnz	r0, .L100
 288:Core/Src/main.c **** 
 1577              		.loc 1 288 1 view .LVU368
 1578 0056 11B0     		add	sp, sp, #68
 1579              	.LCFI25:
 1580              		.cfi_remember_state
 1581              		.cfi_def_cfa_offset 4
 1582              		@ sp needed
 1583 0058 5DF804FB 		ldr	pc, [sp], #4
 1584              	.L99:
 1585              	.LCFI26:
 1586              		.cfi_restore_state
 272:Core/Src/main.c ****   }
 1587              		.loc 1 272 5 is_stmt 1 view .LVU369
 1588 005c FFF7FEFF 		bl	Error_Handler
 1589              	.LVL106:
 1590              	.L100:
 286:Core/Src/main.c ****   }
 1591              		.loc 1 286 5 view .LVU370
 1592 0060 FFF7FEFF 		bl	Error_Handler
 1593              	.LVL107:
 1594              		.cfi_endproc
 1595              	.LFE76:
 1597              		.section	.text.main,"ax",%progbits
 1598              		.align	1
 1599              		.global	main
 1600              		.syntax unified
 1601              		.thumb
 1602              		.thumb_func
 1604              	main:
 1605              	.LFB75:
 151:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1606              		.loc 1 151 1 view -0
 1607              		.cfi_startproc
 1608              		@ Volatile: function does not return.
 1609              		@ args = 0, pretend = 0, frame = 144
 1610              		@ frame_needed = 0, uses_anonymous_args = 0
 1611 0000 00B5     		push	{lr}
 1612              	.LCFI27:
 1613              		.cfi_def_cfa_offset 4
 1614              		.cfi_offset 14, -4
 1615 0002 A5B0     		sub	sp, sp, #148
 1616              	.LCFI28:
 1617              		.cfi_def_cfa_offset 152
 159:Core/Src/main.c **** 
 1618              		.loc 1 159 3 view .LVU372
 1619 0004 FFF7FEFF 		bl	HAL_Init
 1620              	.LVL108:
 166:Core/Src/main.c **** 
 1621              		.loc 1 166 3 view .LVU373
 1622 0008 FFF7FEFF 		bl	SystemClock_Config
 1623              	.LVL109:
 173:Core/Src/main.c ****   MX_USART3_UART_Init();
 1624              		.loc 1 173 3 view .LVU374
 1625 000c FFF7FEFF 		bl	MX_GPIO_Init
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 49


 1626              	.LVL110:
 174:Core/Src/main.c ****   MX_SPI2_Init();
 1627              		.loc 1 174 3 view .LVU375
 1628 0010 FFF7FEFF 		bl	MX_USART3_UART_Init
 1629              	.LVL111:
 175:Core/Src/main.c ****   MX_TIM2_Init();
 1630              		.loc 1 175 3 view .LVU376
 1631 0014 FFF7FEFF 		bl	MX_SPI2_Init
 1632              	.LVL112:
 176:Core/Src/main.c ****   MX_TIM3_Init();
 1633              		.loc 1 176 3 view .LVU377
 1634 0018 FFF7FEFF 		bl	MX_TIM2_Init
 1635              	.LVL113:
 177:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1636              		.loc 1 177 3 view .LVU378
 1637 001c FFF7FEFF 		bl	MX_TIM3_Init
 1638              	.LVL114:
 179:Core/Src/main.c ****   /* USER CODE END 2 */
 1639              		.loc 1 179 3 view .LVU379
 1640 0020 0122     		movs	r2, #1
 1641 0022 3749     		ldr	r1, .L104
 1642 0024 3748     		ldr	r0, .L104+4
 1643 0026 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1644              	.LVL115:
 188:Core/Src/main.c ****   SensorSemHandle = osSemaphoreCreate(osSemaphore(SensorSem), 1);
 1645              		.loc 1 188 3 view .LVU380
 1646 002a 0025     		movs	r5, #0
 1647 002c 2295     		str	r5, [sp, #136]
 1648 002e 2395     		str	r5, [sp, #140]
 189:Core/Src/main.c **** 
 1649              		.loc 1 189 3 view .LVU381
 189:Core/Src/main.c **** 
 1650              		.loc 1 189 21 is_stmt 0 view .LVU382
 1651 0030 0121     		movs	r1, #1
 1652 0032 22A8     		add	r0, sp, #136
 1653 0034 FFF7FEFF 		bl	osSemaphoreCreate
 1654              	.LVL116:
 189:Core/Src/main.c **** 
 1655              		.loc 1 189 19 view .LVU383
 1656 0038 334B     		ldr	r3, .L104+8
 1657 003a 1860     		str	r0, [r3]
 192:Core/Src/main.c ****   ServoSemHandle = osSemaphoreCreate(osSemaphore(ServoSem), 1);
 1658              		.loc 1 192 3 is_stmt 1 view .LVU384
 1659 003c 2095     		str	r5, [sp, #128]
 1660 003e 2195     		str	r5, [sp, #132]
 193:Core/Src/main.c **** 
 1661              		.loc 1 193 3 view .LVU385
 193:Core/Src/main.c **** 
 1662              		.loc 1 193 20 is_stmt 0 view .LVU386
 1663 0040 0121     		movs	r1, #1
 1664 0042 20A8     		add	r0, sp, #128
 1665 0044 FFF7FEFF 		bl	osSemaphoreCreate
 1666              	.LVL117:
 193:Core/Src/main.c **** 
 1667              		.loc 1 193 18 view .LVU387
 1668 0048 304B     		ldr	r3, .L104+12
 1669 004a 1860     		str	r0, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 50


 196:Core/Src/main.c ****   DataSemHandle = osSemaphoreCreate(osSemaphore(DataSem), 1);
 1670              		.loc 1 196 3 is_stmt 1 view .LVU388
 1671 004c 1E95     		str	r5, [sp, #120]
 1672 004e 1F95     		str	r5, [sp, #124]
 197:Core/Src/main.c **** 
 1673              		.loc 1 197 3 view .LVU389
 197:Core/Src/main.c **** 
 1674              		.loc 1 197 19 is_stmt 0 view .LVU390
 1675 0050 0121     		movs	r1, #1
 1676 0052 1EA8     		add	r0, sp, #120
 1677 0054 FFF7FEFF 		bl	osSemaphoreCreate
 1678              	.LVL118:
 197:Core/Src/main.c **** 
 1679              		.loc 1 197 17 view .LVU391
 1680 0058 2D4B     		ldr	r3, .L104+16
 1681 005a 1860     		str	r0, [r3]
 200:Core/Src/main.c ****   IRQSemHandle = osSemaphoreCreate(osSemaphore(IRQSem), 1);
 1682              		.loc 1 200 3 is_stmt 1 view .LVU392
 1683 005c 1C95     		str	r5, [sp, #112]
 1684 005e 1D95     		str	r5, [sp, #116]
 201:Core/Src/main.c **** 
 1685              		.loc 1 201 3 view .LVU393
 201:Core/Src/main.c **** 
 1686              		.loc 1 201 18 is_stmt 0 view .LVU394
 1687 0060 0121     		movs	r1, #1
 1688 0062 1CA8     		add	r0, sp, #112
 1689 0064 FFF7FEFF 		bl	osSemaphoreCreate
 1690              	.LVL119:
 201:Core/Src/main.c **** 
 1691              		.loc 1 201 16 view .LVU395
 1692 0068 2A4B     		ldr	r3, .L104+20
 1693 006a 1860     		str	r0, [r3]
 217:Core/Src/main.c ****   Task1Handle = osThreadCreate(osThread(Task1), NULL);
 1694              		.loc 1 217 3 is_stmt 1 view .LVU396
 1695 006c 2A4C     		ldr	r4, .L104+24
 1696 006e 0DF1540C 		add	ip, sp, #84
 1697 0072 A646     		mov	lr, r4
 1698 0074 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1699 0078 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1700 007c 9EE80700 		ldm	lr, {r0, r1, r2}
 1701 0080 8CE80700 		stm	ip, {r0, r1, r2}
 218:Core/Src/main.c **** 
 1702              		.loc 1 218 3 view .LVU397
 218:Core/Src/main.c **** 
 1703              		.loc 1 218 17 is_stmt 0 view .LVU398
 1704 0084 2946     		mov	r1, r5
 1705 0086 15A8     		add	r0, sp, #84
 1706 0088 FFF7FEFF 		bl	osThreadCreate
 1707              	.LVL120:
 218:Core/Src/main.c **** 
 1708              		.loc 1 218 15 view .LVU399
 1709 008c 234B     		ldr	r3, .L104+28
 1710 008e 1860     		str	r0, [r3]
 221:Core/Src/main.c ****   Task2Handle = osThreadCreate(osThread(Task2), NULL);
 1711              		.loc 1 221 3 is_stmt 1 view .LVU400
 1712 0090 0DF1380C 		add	ip, sp, #56
 1713 0094 04F11C0E 		add	lr, r4, #28
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 51


 1714 0098 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1715 009c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1716 00a0 9EE80700 		ldm	lr, {r0, r1, r2}
 1717 00a4 8CE80700 		stm	ip, {r0, r1, r2}
 222:Core/Src/main.c **** 
 1718              		.loc 1 222 3 view .LVU401
 222:Core/Src/main.c **** 
 1719              		.loc 1 222 17 is_stmt 0 view .LVU402
 1720 00a8 2946     		mov	r1, r5
 1721 00aa 0EA8     		add	r0, sp, #56
 1722 00ac FFF7FEFF 		bl	osThreadCreate
 1723              	.LVL121:
 222:Core/Src/main.c **** 
 1724              		.loc 1 222 15 view .LVU403
 1725 00b0 1B4B     		ldr	r3, .L104+32
 1726 00b2 1860     		str	r0, [r3]
 225:Core/Src/main.c ****   Task3Handle = osThreadCreate(osThread(Task3), NULL);
 1727              		.loc 1 225 3 is_stmt 1 view .LVU404
 1728 00b4 0DF11C0C 		add	ip, sp, #28
 1729 00b8 04F1380E 		add	lr, r4, #56
 1730 00bc BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1731 00c0 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1732 00c4 9EE80700 		ldm	lr, {r0, r1, r2}
 1733 00c8 8CE80700 		stm	ip, {r0, r1, r2}
 226:Core/Src/main.c **** 
 1734              		.loc 1 226 3 view .LVU405
 226:Core/Src/main.c **** 
 1735              		.loc 1 226 17 is_stmt 0 view .LVU406
 1736 00cc 2946     		mov	r1, r5
 1737 00ce 07A8     		add	r0, sp, #28
 1738 00d0 FFF7FEFF 		bl	osThreadCreate
 1739              	.LVL122:
 226:Core/Src/main.c **** 
 1740              		.loc 1 226 15 view .LVU407
 1741 00d4 134B     		ldr	r3, .L104+36
 1742 00d6 1860     		str	r0, [r3]
 229:Core/Src/main.c ****   Task4Handle = osThreadCreate(osThread(Task4), NULL);
 1743              		.loc 1 229 3 is_stmt 1 view .LVU408
 1744 00d8 EE46     		mov	lr, sp
 1745 00da 04F1540C 		add	ip, r4, #84
 1746 00de BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1747 00e2 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 1748 00e6 9CE80700 		ldm	ip, {r0, r1, r2}
 1749 00ea 8EE80700 		stm	lr, {r0, r1, r2}
 230:Core/Src/main.c **** 
 1750              		.loc 1 230 3 view .LVU409
 230:Core/Src/main.c **** 
 1751              		.loc 1 230 17 is_stmt 0 view .LVU410
 1752 00ee 2946     		mov	r1, r5
 1753 00f0 6846     		mov	r0, sp
 1754 00f2 FFF7FEFF 		bl	osThreadCreate
 1755              	.LVL123:
 230:Core/Src/main.c **** 
 1756              		.loc 1 230 15 view .LVU411
 1757 00f6 0C4B     		ldr	r3, .L104+40
 1758 00f8 1860     		str	r0, [r3]
 237:Core/Src/main.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 52


 1759              		.loc 1 237 3 is_stmt 1 view .LVU412
 1760 00fa FFF7FEFF 		bl	osKernelStart
 1761              	.LVL124:
 1762              	.L102:
 242:Core/Src/main.c ****   {
 1763              		.loc 1 242 3 discriminator 1 view .LVU413
 247:Core/Src/main.c ****   /* USER CODE END 3 */
 1764              		.loc 1 247 3 discriminator 1 view .LVU414
 242:Core/Src/main.c ****   {
 1765              		.loc 1 242 9 discriminator 1 view .LVU415
 1766 00fe FEE7     		b	.L102
 1767              	.L105:
 1768              		.align	2
 1769              	.L104:
 1770 0100 00000000 		.word	.LANCHOR16
 1771 0104 00000000 		.word	.LANCHOR0
 1772 0108 00000000 		.word	.LANCHOR1
 1773 010c 00000000 		.word	.LANCHOR7
 1774 0110 00000000 		.word	.LANCHOR2
 1775 0114 00000000 		.word	.LANCHOR11
 1776 0118 00000000 		.word	.LANCHOR21
 1777 011c 00000000 		.word	.LANCHOR22
 1778 0120 00000000 		.word	.LANCHOR23
 1779 0124 00000000 		.word	.LANCHOR24
 1780 0128 00000000 		.word	.LANCHOR25
 1781              		.cfi_endproc
 1782              	.LFE75:
 1784              		.global	PC_threshold
 1785              		.global	PC_rota
 1786              		.global	angle
 1787              		.global	str_thres
 1788              		.global	label_thres
 1789              		.global	threshold
 1790              		.global	rota
 1791              		.global	count
 1792              		.global	buf_humi
 1793              		.global	buf_temp
 1794              		.global	buf_sensor
 1795              		.global	humi
 1796              		.global	temp
 1797              		.global	Rx_index
 1798              		.global	buffer_data
 1799              		.global	Rx_data
 1800              		.global	Mode
 1801              		.global	IRQSemHandle
 1802              		.global	DataSemHandle
 1803              		.global	ServoSemHandle
 1804              		.global	SensorSemHandle
 1805              		.global	Task4Handle
 1806              		.global	Task3Handle
 1807              		.global	Task2Handle
 1808              		.global	Task1Handle
 1809              		.global	huart3
 1810              		.global	htim3
 1811              		.global	htim2
 1812              		.global	hspi2
 1813              		.section	.rodata
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 53


 1814              		.align	2
 1815              		.set	.LANCHOR21,. + 0
 1816              	.LC31:
 1817 0000 00000000 		.word	.LC0
 1818 0004 00000000 		.word	Task_Sensor
 1819 0008 0200     		.short	2
 1820 000a 0000     		.space	2
 1821 000c 00000000 		.word	0
 1822 0010 80000000 		.word	128
 1823 0014 00000000 		.word	0
 1824 0018 00000000 		.word	0
 1825              	.LC32:
 1826 001c 08000000 		.word	.LC2
 1827 0020 00000000 		.word	Task_Servo
 1828 0024 0100     		.short	1
 1829 0026 0000     		.space	2
 1830 0028 00000000 		.word	0
 1831 002c 80000000 		.word	128
 1832 0030 00000000 		.word	0
 1833 0034 00000000 		.word	0
 1834              	.LC33:
 1835 0038 10000000 		.word	.LC4
 1836 003c 00000000 		.word	Task_Display
 1837 0040 0000     		.short	0
 1838 0042 0000     		.space	2
 1839 0044 00000000 		.word	0
 1840 0048 80000000 		.word	128
 1841 004c 00000000 		.word	0
 1842 0050 00000000 		.word	0
 1843              	.LC34:
 1844 0054 18000000 		.word	.LC6
 1845 0058 00000000 		.word	Task_Data
 1846 005c FFFF     		.short	-1
 1847 005e 0000     		.space	2
 1848 0060 00000000 		.word	0
 1849 0064 80000000 		.word	128
 1850 0068 00000000 		.word	0
 1851 006c 00000000 		.word	0
 1852              		.section	.bss.DataSemHandle,"aw",%nobits
 1853              		.align	2
 1854              		.set	.LANCHOR2,. + 0
 1857              	DataSemHandle:
 1858 0000 00000000 		.space	4
 1859              		.section	.bss.IRQSemHandle,"aw",%nobits
 1860              		.align	2
 1861              		.set	.LANCHOR11,. + 0
 1864              	IRQSemHandle:
 1865 0000 00000000 		.space	4
 1866              		.section	.bss.Mode,"aw",%nobits
 1867              		.align	2
 1868              		.set	.LANCHOR3,. + 0
 1871              	Mode:
 1872 0000 00000000 		.space	4
 1873              		.section	.bss.PC_rota,"aw",%nobits
 1874              		.align	2
 1875              		.set	.LANCHOR6,. + 0
 1878              	PC_rota:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 54


 1879 0000 00000000 		.space	4
 1880              		.section	.bss.PC_threshold,"aw",%nobits
 1881              		.align	2
 1882              		.set	.LANCHOR15,. + 0
 1885              	PC_threshold:
 1886 0000 00000000 		.space	4
 1887              		.section	.bss.Rx_data,"aw",%nobits
 1888              		.set	.LANCHOR16,. + 0
 1891              	Rx_data:
 1892 0000 00       		.space	1
 1893              		.section	.bss.Rx_index,"aw",%nobits
 1894              		.align	2
 1895              		.set	.LANCHOR17,. + 0
 1898              	Rx_index:
 1899 0000 00000000 		.space	4
 1900              		.section	.bss.SensorSemHandle,"aw",%nobits
 1901              		.align	2
 1902              		.set	.LANCHOR1,. + 0
 1905              	SensorSemHandle:
 1906 0000 00000000 		.space	4
 1907              		.section	.bss.ServoSemHandle,"aw",%nobits
 1908              		.align	2
 1909              		.set	.LANCHOR7,. + 0
 1912              	ServoSemHandle:
 1913 0000 00000000 		.space	4
 1914              		.section	.bss.Task1Handle,"aw",%nobits
 1915              		.align	2
 1916              		.set	.LANCHOR22,. + 0
 1919              	Task1Handle:
 1920 0000 00000000 		.space	4
 1921              		.section	.bss.Task2Handle,"aw",%nobits
 1922              		.align	2
 1923              		.set	.LANCHOR23,. + 0
 1926              	Task2Handle:
 1927 0000 00000000 		.space	4
 1928              		.section	.bss.Task3Handle,"aw",%nobits
 1929              		.align	2
 1930              		.set	.LANCHOR24,. + 0
 1933              	Task3Handle:
 1934 0000 00000000 		.space	4
 1935              		.section	.bss.Task4Handle,"aw",%nobits
 1936              		.align	2
 1937              		.set	.LANCHOR25,. + 0
 1940              	Task4Handle:
 1941 0000 00000000 		.space	4
 1942              		.section	.bss.angle,"aw",%nobits
 1943              		.align	2
 1946              	angle:
 1947 0000 00000000 		.space	4
 1948              		.section	.bss.buf_humi,"aw",%nobits
 1949              		.align	2
 1950              		.set	.LANCHOR10,. + 0
 1953              	buf_humi:
 1954 0000 00000000 		.space	20
 1954      00000000 
 1954      00000000 
 1954      00000000 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 55


 1954      00000000 
 1955              		.section	.bss.buf_sensor,"aw",%nobits
 1956              		.align	2
 1959              	buf_sensor:
 1960 0000 00000000 		.space	20
 1960      00000000 
 1960      00000000 
 1960      00000000 
 1960      00000000 
 1961              		.section	.bss.buf_temp,"aw",%nobits
 1962              		.align	2
 1963              		.set	.LANCHOR8,. + 0
 1966              	buf_temp:
 1967 0000 00000000 		.space	20
 1967      00000000 
 1967      00000000 
 1967      00000000 
 1967      00000000 
 1968              		.section	.bss.buffer_data,"aw",%nobits
 1969              		.align	2
 1970              		.set	.LANCHOR12,. + 0
 1973              	buffer_data:
 1974 0000 00000000 		.space	50
 1974      00000000 
 1974      00000000 
 1974      00000000 
 1974      00000000 
 1975              		.section	.bss.hspi2,"aw",%nobits
 1976              		.align	2
 1977              		.set	.LANCHOR18,. + 0
 1980              	hspi2:
 1981 0000 00000000 		.space	88
 1981      00000000 
 1981      00000000 
 1981      00000000 
 1981      00000000 
 1982              		.section	.bss.htim2,"aw",%nobits
 1983              		.align	2
 1984              		.set	.LANCHOR19,. + 0
 1987              	htim2:
 1988 0000 00000000 		.space	72
 1988      00000000 
 1988      00000000 
 1988      00000000 
 1988      00000000 
 1989              		.section	.bss.htim3,"aw",%nobits
 1990              		.align	2
 1991              		.set	.LANCHOR20,. + 0
 1994              	htim3:
 1995 0000 00000000 		.space	72
 1995      00000000 
 1995      00000000 
 1995      00000000 
 1995      00000000 
 1996              		.section	.bss.huart3,"aw",%nobits
 1997              		.align	2
 1998              		.set	.LANCHOR0,. + 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 56


 2001              	huart3:
 2002 0000 00000000 		.space	68
 2002      00000000 
 2002      00000000 
 2002      00000000 
 2002      00000000 
 2003              		.section	.bss.label_thres,"aw",%nobits
 2004              		.align	2
 2005              		.set	.LANCHOR14,. + 0
 2008              	label_thres:
 2009 0000 00000000 		.space	10
 2009      00000000 
 2009      0000
 2010              		.section	.bss.rota,"aw",%nobits
 2011              		.align	2
 2012              		.set	.LANCHOR5,. + 0
 2015              	rota:
 2016 0000 00000000 		.space	20
 2016      00000000 
 2016      00000000 
 2016      00000000 
 2016      00000000 
 2017              		.section	.bss.str_thres,"aw",%nobits
 2018              		.align	2
 2019              		.set	.LANCHOR13,. + 0
 2022              	str_thres:
 2023 0000 00000000 		.space	5
 2023      00
 2024              		.section	.bss.threshold,"aw",%nobits
 2025              		.align	2
 2028              	threshold:
 2029 0000 00000000 		.space	20
 2029      00000000 
 2029      00000000 
 2029      00000000 
 2029      00000000 
 2030              		.section	.data.count,"aw"
 2031              		.align	2
 2034              	count:
 2035 0000 19000000 		.word	25
 2036              		.section	.data.humi,"aw"
 2037              		.align	2
 2038              		.set	.LANCHOR9,. + 0
 2041              	humi:
 2042 0000 5A000000 		.word	90
 2043              		.section	.data.temp,"aw"
 2044              		.align	2
 2045              		.set	.LANCHOR4,. + 0
 2048              	temp:
 2049 0000 1E000000 		.word	30
 2050              		.text
 2051              	.Letext0:
 2052              		.file 3 "d:\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_types.h"
 2053              		.file 4 "d:\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 2054              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2055              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2056              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 57


 2057              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2058              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2059              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 2060              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 2061              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 2062              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 2063              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 2064              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 2065              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 2066              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 2067              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 2068              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 2069              		.file 20 "Core/Inc/fonts.h"
 2070              		.file 21 "Core/Inc/st7735.h"
 2071              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2072              		.file 23 "d:\\10 2021.10\\arm-none-eabi\\include\\stdio.h"
 2073              		.file 24 "d:\\10 2021.10\\arm-none-eabi\\include\\stdlib.h"
 2074              		.file 25 "d:\\10 2021.10\\arm-none-eabi\\include\\string.h"
 2075              		.file 26 "<built-in>"
 2076              		.file 27 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 2077              		.file 28 "Core/Inc/main.h"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 58


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:15     .rodata.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:31     .text.MX_GPIO_Init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:36     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:168    .text.MX_GPIO_Init:00000090 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:175    .text.log_data:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:181    .text.log_data:00000000 log_data
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:213    .text.log_data:00000018 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:218    .rodata.Task_Sensor.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:222    .text.Task_Sensor:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:228    .text.Task_Sensor:00000000 Task_Sensor
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:263    .text.Task_Sensor:0000001c $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:269    .rodata.Task_Servo.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:282    .text.Task_Servo:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:288    .text.Task_Servo:00000000 Task_Servo
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:436    .text.Task_Servo:000000c8 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:453    .rodata.Task_Display.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:475    .text.Task_Display:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:481    .text.Task_Display:00000000 Task_Display
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:623    .text.Task_Display:000000e0 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:643    .rodata.Task_Data.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:678    .text.Task_Data:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:684    .text.Task_Data:00000000 Task_Data
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:828    .text.Task_Data:000000bc $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:851    .rodata.HAL_UART_RxCpltCallback.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:858    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:864    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:969    .text.HAL_UART_RxCpltCallback:00000060 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:981    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:987    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1021   .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1026   .text.Error_Handler:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1032   .text.Error_Handler:00000000 Error_Handler
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1064   .text.MX_USART3_UART_Init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1069   .text.MX_USART3_UART_Init:00000000 MX_USART3_UART_Init
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1124   .text.MX_USART3_UART_Init:0000002c $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1130   .text.MX_SPI2_Init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1135   .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1204   .text.MX_SPI2_Init:0000003c $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1210   .text.MX_TIM2_Init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1215   .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1368   .text.MX_TIM2_Init:000000a0 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1373   .text.MX_TIM3_Init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1378   .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1481   .text.MX_TIM3_Init:00000060 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1487   .text.SystemClock_Config:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1493   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1598   .text.main:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1604   .text.main:00000000 main
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1770   .text.main:00000100 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1885   .bss.PC_threshold:00000000 PC_threshold
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1878   .bss.PC_rota:00000000 PC_rota
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1946   .bss.angle:00000000 angle
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:2022   .bss.str_thres:00000000 str_thres
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:2008   .bss.label_thres:00000000 label_thres
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:2028   .bss.threshold:00000000 threshold
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 59


C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:2015   .bss.rota:00000000 rota
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:2034   .data.count:00000000 count
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1953   .bss.buf_humi:00000000 buf_humi
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1966   .bss.buf_temp:00000000 buf_temp
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1959   .bss.buf_sensor:00000000 buf_sensor
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:2041   .data.humi:00000000 humi
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:2048   .data.temp:00000000 temp
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1898   .bss.Rx_index:00000000 Rx_index
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1973   .bss.buffer_data:00000000 buffer_data
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1891   .bss.Rx_data:00000000 Rx_data
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1871   .bss.Mode:00000000 Mode
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1864   .bss.IRQSemHandle:00000000 IRQSemHandle
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1857   .bss.DataSemHandle:00000000 DataSemHandle
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1912   .bss.ServoSemHandle:00000000 ServoSemHandle
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1905   .bss.SensorSemHandle:00000000 SensorSemHandle
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1940   .bss.Task4Handle:00000000 Task4Handle
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1933   .bss.Task3Handle:00000000 Task3Handle
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1926   .bss.Task2Handle:00000000 Task2Handle
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1919   .bss.Task1Handle:00000000 Task1Handle
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:2001   .bss.huart3:00000000 huart3
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1994   .bss.htim3:00000000 htim3
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1987   .bss.htim2:00000000 htim2
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1980   .bss.hspi2:00000000 hspi2
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1814   .rodata:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1853   .bss.DataSemHandle:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1860   .bss.IRQSemHandle:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1867   .bss.Mode:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1874   .bss.PC_rota:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1881   .bss.PC_threshold:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1892   .bss.Rx_data:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1894   .bss.Rx_index:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1901   .bss.SensorSemHandle:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1908   .bss.ServoSemHandle:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1915   .bss.Task1Handle:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1922   .bss.Task2Handle:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1929   .bss.Task3Handle:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1936   .bss.Task4Handle:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1943   .bss.angle:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1949   .bss.buf_humi:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1956   .bss.buf_sensor:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1962   .bss.buf_temp:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1969   .bss.buffer_data:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1976   .bss.hspi2:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1983   .bss.htim2:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1990   .bss.htim3:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:1997   .bss.huart3:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:2004   .bss.label_thres:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:2011   .bss.rota:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:2018   .bss.str_thres:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:2025   .bss.threshold:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:2031   .data.count:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:2037   .data.humi:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s:2044   .data.temp:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccJJkkWA.s 			page 60


strlen
HAL_UART_Transmit
osSemaphoreRelease
osDelay
__aeabi_i2d
__aeabi_ddiv
__aeabi_d2iz
osSemaphoreWait
ST7735_WriteString
Font_11x18
__aeabi_ui2d
__aeabi_dmul
__aeabi_dsub
sprintf
__aeabi_d2f
sscanf
atof
strcat
memset
strncmp
HAL_UART_Receive_IT
strcmp
HAL_IncTick
HAL_UART_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
osSemaphoreCreate
osThreadCreate
osKernelStart
